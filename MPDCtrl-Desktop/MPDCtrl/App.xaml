<Application x:Class="MPDCtrl.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MPDCtrl"
             xmlns:vms="clr-namespace:MPDCtrl.ViewModels"
             xmlns:common="clr-namespace:MPDCtrl.Common"
             xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!-- 
             StartupUri="Views\MainWindow.xaml"
             Startup="AppOnStartup" -->
    <Application.Resources>
        <ResourceDictionary>
            <!--
            <vms:MainViewModel x:Key="MainViewModel" />
            -->
            
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <common:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed" />
            
            <common:EnumToBoolConverter x:Key="EnumBooleanConverter"/>
            
            <common:LeftMarginMultiplierConverter x:Key="lengthConverter"/>
            
            <common:MultipleCommandParameterConverter x:Key="MultipleCommandParameterConverter"/>

            <ResourceDictionary.MergedDictionaries>

                <!-- Default theme (for theme switch) -->
                <ResourceDictionary Source="pack://application:,,,/Themes/DarkTheme.xaml" x:Name="DarkTheme"/>

                <!-- Basics -->
                <ResourceDictionary>

                    <Style TargetType="{x:Type TextBox}">
                        <Style.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="3" />
                            </Style>
                        </Style.Resources>
                        <Setter Property="Padding" Value="3"/>
                    </Style>

                    <Style x:Key="DefaultTextBlockStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Normal" />
                    </Style>

                    <Style x:Key="DefaultRunStyle" TargetType="{x:Type Run}">
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontStyle" Value="Normal" />
                    </Style>

                    <Style x:Key="DefaultLabelStyle" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource ControlMediumColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Padding" Value="0" />
                    </Style>

                    <Style x:Key="SectionTitle" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource TitleTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Margin" Value="3 0 0 0" />
                    </Style>

                    <Style x:Key="ErrorInfoTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlockStyle}">
                        <Setter Property="Foreground" Value="{DynamicResource WarningColorBrush}" />
                    </Style>

                    <Style x:Key="HyperlinkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlLightColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type Hyperlink}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource HyperlinkFocusVisual}"/>
                        <Setter Property="TextBlock.TextDecorations" Value="None" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                                <Setter Property="Foreground" Value="LightBlue" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="TextBlock.TextDecorations" Value="None" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DefaultRadioButtonStyle" TargetType="{x:Type RadioButton}">
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="3 0 0 0" />
                        <Setter Property="FontStyle" Value="Normal" />
                    </Style>

                    <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Style.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="3" />
                            </Style>
                        </Style.Resources>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Margin" Value="1"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="{DynamicResource NormalTextBoxBackgroundColorBrush}" />
                        <Style.Triggers>
                            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                <Setter Property="Background" Value="{DynamicResource NormalTextBoxBackgroundFocusedColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource NormalTextBoxBackgroundMouseOverColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource NormalTextBoxBackgroundColorBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DefaultPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                        <Style.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="3" />
                            </Style>
                        </Style.Resources>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Margin" Value="1"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="{DynamicResource NormalTextBoxBackgroundColorBrush}" />
                    </Style>

                    <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <!--
                        <Setter Property="CornerRadius" Value="8" />
                        -->
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="CornerRadius" Value="0" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderInactiveBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <!-- ボード・タイルのスタイル -->
                    <Style x:Key="BoardStyle" TargetType="Border">
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="{DynamicResource ShadowBoardColor}" Opacity="1" ShadowDepth="0.8" BlurRadius="3" Direction="315"/>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>
                
                <!-- TreeViewMenu -->
                <ResourceDictionary>
                    <Style x:Key="TreeViewMenuStyle" TargetType="{x:Type TreeView}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="#121212"/>
                        <Setter Property="BorderThickness" Value="0 0 0 0"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeView}">
                                    <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                                        <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel/>
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
                
                <!-- TreeViewMenuItem -->
                <ResourceDictionary>

                    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

                    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid Width="15" Height="13" Background="Transparent">
                                        <Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Fill="{StaticResource GlyphBrush}" Data="M 4 0 L 8 4 L 4 8 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="TreeViewItemFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="TreeViewMenuItemStyle" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="{DynamicResource ItemBackgroundColorBrush}"/>

                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="1,1,0,1"/>
                        <Setter Property="Foreground" Value="{DynamicResource ItemForegroundColorBrush}"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <ControlTemplate.Resources>
                                        <common:LeftMarginMultiplierConverter Length="19" x:Key="lengthConverter" />
                                    </ControlTemplate.Resources>
                                    <StackPanel>
                                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="4" Margin="3,0,3,0">
                                            <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="19" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>

                                                <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                            </Grid>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" />
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="Expander"  Property="Visibility"  Value="Hidden"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Width" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false"/>
                                                <Condition Property="Height" Value="Auto"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemSelectedBackgroundColorBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ItemSelectedForegroundColorBrush}"/>
                                            <Setter TargetName="Bd" Property="TextElement.FontWeight" Value="Bold"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource ItemMouseOverForegroundColorBrush}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemSelectedBackgroundColorBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ItemSelectedInactiveForegroundColorBrush}"/>
                                            <Setter TargetName="Bd" Property="TextElement.FontWeight" Value="Bold"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemSelectedInactiveBackgroundColorBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ItemSelectedInactiveForegroundColorBrush}"/>
                                            <Setter TargetName="Bd" Property="TextElement.FontWeight" Value="Bold"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>
                
                <!-- Search Box -->
                <ResourceDictionary>
                    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
                    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
                    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
                    
                    <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="27"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            <Button Grid.Column="1" Content="test"></Button>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
                
                <!-- PathButton -->
                <ResourceDictionary>

                    <!-- FocusVisual -->
                    <Style x:Key="ButtonFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2" StrokeThickness="1" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="PathButton" TargetType="Button">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border" TextBlock.Foreground="{DynamicResource ControlForegroundColorBrush}" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0">
                                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>

                                        <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Stroke="Transparent" StrokeThickness="0" Margin="8" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsDefault" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>

                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource DisabledForegroundColorBrush}"/>
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="true">
                                            <!--
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseOverBackgroundColorBrush}"></Setter>
                                            -->
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}">
                                                <!--
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                                -->
                                            </Setter>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="true" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>

                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>
                
                <!-- SystemButton -->
                <ResourceDictionary>

                    <Style x:Key="PathSysButton" TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="RenderOptions.EdgeMode" Value="Unspecified" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="Width" Value="46" />
                        <Setter Property="Height" Value="32" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border" TextBlock.Foreground="{DynamicResource ControlForegroundColorBrush}" Background="{TemplateBinding Background}" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>

                                        <Viewbox Width="32" Height="32">
                                            <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Stroke="Transparent" StrokeThickness="0" Margin="13" RenderTransformOrigin="0.5,0.5">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <RotateTransform Angle="0" />
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                                <Path.Fill>
                                                    <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                                </Path.Fill>
                                            </Path>
                                        </Viewbox>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseOverBackgroundColorBrush}"></Setter>
                                            
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}">
                                                <!--
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                                -->
                                            </Setter>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="true" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>

                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- SystemButtonClose -->
                <ResourceDictionary>

                    <Style x:Key="PathSysButtonClose" TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="RenderOptions.EdgeMode" Value="Unspecified" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="Width" Value="46" />
                        <Setter Property="Height" Value="32" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border" TextBlock.Foreground="{DynamicResource ControlForegroundColorBrush}" Background="{TemplateBinding Background}" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>

                                        <Viewbox Width="32" Height="32">
                                            <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Stroke="Transparent" StrokeThickness="0" Margin="13" RenderTransformOrigin="0.5,0.5">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <RotateTransform Angle="0" />
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                                <Path.Fill>
                                                    <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                                </Path.Fill>
                                            </Path>
                                        </Viewbox>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <!-- ここの色を変えただけ -->
                                            <Setter TargetName="Border" Property="Background" Value="#E81123"></Setter>

                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}">
                                                <!--
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                                -->
                                            </Setter>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="true" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>

                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- PathToggleButton -->
                <ResourceDictionary>
                    
                    <!-- FocusVisual -->
                    <Style x:Key="ToggleButtonFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="0" StrokeThickness="1" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <Style x:Key="PathToggleButton" TargetType="{x:Type ToggleButton}">
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ToggleButtonFocusVisual}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                        
                                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="Transparent" StrokeThickness="1" Margin="1" Fill="{TemplateBinding Foreground}" Stretch="Uniform" RenderTransformOrigin="0,0" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}">
                                        </Path>
                                        
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource ControlForegroundColorBrush}"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="true" />
                                                <Condition Property="IsChecked" Value="false" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="true" />
                                                <Condition Property="IsChecked" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ControlPressedColorBrush}"/>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="true" />
                                                <Condition Property="IsChecked" Value="false" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource ControlPressedColorBrush}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource ControlPressedColorBrush}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="true" />
                                                <Condition Property="IsChecked" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource ControlPressedColorBrush}"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- SliderHorizontalStyle Seek -->
                <ResourceDictionary>

                    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SliderFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="0" StrokeThickness="1" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <!--<Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>-->
                            <Ellipse x:Name="grip" Width="14" Height="14" Fill="{DynamicResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{DynamicResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
                        </Grid>

                        <!-- ツマミのトリガー設定(マウスオーバーなどで色を変えたりする) -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource ControlMediumColorBrush}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- 真ん中の横棒 -->
                                <Border x:Name="TrackBackground" BorderBrush="{DynamicResource SliderThumb.Track.Border}" BorderThickness="1" Background="{DynamicResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center" CornerRadius="1">
                                    <Canvas Margin="-6,-1">
                                        <!-- SelectionStart～Endで色が変わる部分 -->
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="18"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>

                        <!-- スライダー全体のトリガー設定 -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <!-- スライダー本体 -->
                    <Style x:Key="SliderHorizontalStyle" TargetType="{x:Type Slider}">
                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource SliderFocusVisual}" />
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource SliderThumb.Static.Foreground}"/>
                        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
                    </Style>
                    
                </ResourceDictionary>

                <!-- CustomSliderStyle Volume -->
                <ResourceDictionary>

                    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <Style x:Key="SliderFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="0" StrokeThickness="1" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{DynamicResource SliderThumb.Static.Background}" SnapsToDevicePixels="True" StrokeThickness="1" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}" UseLayoutRounding="True" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{DynamicResource SliderThumb.Static.Background}" SnapsToDevicePixels="True" StrokeThickness="1" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}" UseLayoutRounding="True" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" SnapsToDevicePixels="True" StrokeThickness="1" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}" UseLayoutRounding="True" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                                <Border x:Name="TrackBackground" Background="{DynamicResource SliderThumb.Track.Background}" BorderThickness="1" BorderBrush="{StaticResource SliderThumb.Track.Border}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                                    <Canvas Margin="-6,-1">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{DynamicResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{DynamicResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Width="12" Height="14" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{DynamicResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{DynamicResource SliderThumb.Static.Border}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{DynamicResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource ControlMediumColorBrush}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                            <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{DynamicResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource SliderThumb.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                                <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                                <Border x:Name="TrackBackground" Background="{DynamicResource SliderThumb.Track.Background}" BorderThickness="1" BorderBrush="{DynamicResource SliderThumb.Track.Border}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0" CornerRadius="1">
                                    <Canvas Margin="-1,-1">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{DynamicResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{DynamicResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Focusable="False" Width="14" Height="12" OverridesDefaultStyle="True" Template="{DynamicResource SliderThumbVerticalDefault}" VerticalAlignment="Top"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Template" TargetName="Thumb" Value="{DynamicResource SliderThumbVerticalLeft}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                <Setter Property="Template" TargetName="Thumb" Value="{DynamicResource SliderThumbVerticalRight}"/>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <Style x:Key="CustomSliderStyle" TargetType="{x:Type Slider}">
                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource SliderFocusVisual}" />
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource SliderThumb.Static.Foreground}"/>
                        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
                        <Style.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>

                <!-- NoChromeButtons -->
                <ResourceDictionary>
                    <!--
                    https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/button-styles-and-templates
                    -->
                    <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="#ADADAD"/>
                                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="NoChromeToggleButton" TargetType="{x:Type ToggleButton}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="#ADADAD"/>
                                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                </ResourceDictionary>

                <!-- Flat ComboBox -->
                <ResourceDictionary>

                    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="18" />
                            </Grid.ColumnDefinitions>
                            <Border Name="Border" Grid.ColumnSpan="2" BorderBrush="Gray" CornerRadius="0" BorderThickness="0" Background="{DynamicResource ComboBoxNormalBackgroundBrush}" />
                            <Border Name="ButtonBorder" Grid.Column="1" CornerRadius="0" BorderThickness="0 0 0 0" BorderBrush="Transparent" Margin="1 1 1 0" Background="{DynamicResource ComboBoxNormalBackgroundBrush}" >
                                <Path Name="Arrow" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" Fill="Gray" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource ControlForegroundColorBrush}"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="Panel.Background" TargetName="Border" Value="Transparent"/>
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxDisabledBorderBrush}"/>
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
                        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                        <Setter Property="TextElement.Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid Background="{TemplateBinding Background}">
                                        <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                                        <ContentPresenter Name="ContentSite" Margin="0, 0, 23, 0" IsHitTestVisible="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="Center" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                        
                                        <TextBox Name="PART_EditableTextBox" Margin="0, 0, 23, 0" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="True" >
                                            <TextBox.Template>
                                                <ControlTemplate TargetType="TextBox" >
                                                    <Border Name="PART_ContentHost" Focusable="False" />
                                                </ControlTemplate>
                                            </TextBox.Template>
                                        </TextBox>

                                        <TextBlock x:Name="SelectMessage" HorizontalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"  Visibility="Collapsed" IsHitTestVisible="False" TextElement.Foreground="{DynamicResource NormalTextColorBrush}" />

                                        <!-- Popup showing items -->
                                        <Popup Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide" Margin="0" TextElement.Foreground="{DynamicResource NormalTextColorBrush}">
                                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                                <Border Name="DropDownBorder" Background="{DynamicResource ComboBoxPullDownMenuBackgroundBrush}" TextElement.Foreground="{DynamicResource NormalTextColorBrush}" Margin="0, 0, 0, 0" CornerRadius="0" BorderThickness="0" BorderBrush="{DynamicResource ComboBoxPullDownMenuBorderBrush}"/>
                                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ItemsControl.HasItems" Value="False">
                                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                        </Trigger>
                                        <Trigger Property="UIElement.IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                        </Trigger>
                                        <Trigger Property="ComboBox.IsEditable" Value="True">
                                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="SelectedItem" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="SelectMessage" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextElement.Foreground" TargetName="SelectMessage" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter Property="TextElement.Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- CheckBox -->
                <ResourceDictionary>

                    <Style x:Key="CheckBoxFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlLightColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
                    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>

                    <Style x:Key="CheckBoxOptionMarkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlLightColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FF707070"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>

                    <Style x:Key="CustomCheckBoxStyle" TargetType="{x:Type CheckBox}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}"/>
                        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Grid x:Name="markGrid">
                                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent" Value="true">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxOptionMarkFocusVisual}"/>
                                            <Setter Property="Padding" Value="4,-1,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <Style x:Key="DefaultCheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CustomCheckBoxStyle}">
                        <Setter Property="Foreground" Value="{StaticResource NormalTextColorBrush}" />
                        <Setter Property="Background" Value="{DynamicResource NormalTextBoxBackgroundColorBrush}"/>
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontStyle" Value="Normal" />
                    </Style>

                </ResourceDictionary>

                <!-- RadioButton -->
                <ResourceDictionary>
                    <Style x:Key="RadioButtonFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="4 2 2 2" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="RadioButtonOptionMarkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="SelectionRadioButtonStyle" TargetType="{x:Type RadioButton}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Gainsboro"/>
                        <Setter Property="Foreground" Value="{StaticResource ControlForegroundColorBrush}"/>
                        <Setter Property="BorderThickness" Value="0.2"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                    <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Height="22" VerticalAlignment="Center" Margin="0 0 0 0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Border x:Name="radioButtonContentBorder" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" CornerRadius="2">
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent" Value="true">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                            <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Background" TargetName="radioButtonContentBorder" Value="{DynamicResource RadioButtonCheckedBackgroundColorBrush}"/>
                                            <Setter Property="BorderBrush" Value="#212121"/>
                                            <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="false">
                                            <Setter Property="Background" TargetName="radioButtonContentBorder" Value="{DynamicResource RadioButtonUnCheckedBackgroundColorBrush}"/>
                                            <Setter Property="TextElement.FontWeight" Value="Normal"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <Setter Property="Background" TargetName="radioButtonContentBorder" Value="Gainsboro"/>
                                            <Setter Property="BorderBrush" Value="Gainsboro"/>
                                            <Setter Property="Foreground" Value="#CCC"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- TreeView -->
                <ResourceDictionary>

                    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid Width="15" Height="13" Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Collapsed">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expanded">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Indeterminate" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Path x:Name="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Data="M 4 0 L 8 4 L 4 8 Z">
                                            <Path.Fill>
                                                <SolidColorBrush Color="{DynamicResource ControlDarkColor}" />
                                            </Path.Fill>
                                        </Path>
                                        <Path x:Name="Expanded" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Data="M 0 4 L 8 4 L 4 8 Z" Visibility="Hidden">
                                            <Path.Fill>
                                                <SolidColorBrush Color="{DynamicResource ControlDarkColor}" />
                                            </Path.Fill>
                                        </Path>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="TreeViewItemFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="0" StrokeThickness="1" Stroke="#CCCCCC" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <Style x:Key="TreeviewItemStyle" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Padding" Value="0 0 0 1" />
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="{DynamicResource ItemForegroundColorBrush}" />
                        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="19" Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Selected">
                                                    <!--
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlLightColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                    -->
                                                </VisualState>
                                                <VisualState x:Name="Unselected">
                                                    <!--
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                    -->
                                                </VisualState>
                                                <VisualState x:Name="SelectedInactive">
                                                    <!-- 
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlLightColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                    -->
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="ExpansionStates">
                                                <VisualState x:Name="Expanded">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Collapsed" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"/>
                                        
                                        <Border x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" TextBlock.Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" CornerRadius="2">

                                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                            <!--
                                            <Border.InputBindings>
                                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Path=DataContext.TreeviewLeftDoubleClickCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}" CommandParameter="{Binding Path=SelectedNode, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}"/>
                                            </Border.InputBindings>
                                            -->
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false" />
                                                <Condition Property="Width" Value="Auto" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false" />
                                                <Condition Property="Height" Value="Auto" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                        </MultiTrigger>
                                        <!--
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="False" />
                                                <Condition Property="IsSelected" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="{StaticResource ControlForegroundColor}" />
                                        </MultiTrigger>
                                        -->
                                        
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="PART_Header" Property="TextElement.FontWeight" Value="Bold"/>
                                            <Setter TargetName="PART_Header" Property="TextElement.Foreground" Value="{DynamicResource ItemMouseOverForegroundColorBrush}" />
                                        </Trigger>
                                        

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsSelected" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="TextBlock.Foreground" Value="{DynamicResource ItemMouseOverForegroundColorBrush}" />
                                        </MultiTrigger>
                                        <!--
                                        -->

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                </ResourceDictionary>
                
                <!-- ListView -->
                <ResourceDictionary>

                    <Style x:Key="GridViewColumnHeaderGripperStyle" TargetType="Thumb">
                        <Setter Property="OverridesDefaultStyle" Value="False"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,1" Opacity="0.5">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0.0" Color="{DynamicResource BorderDarkColor}" />
                                            <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="{DynamicResource BorderLightColorBrush}" BorderBrush="{DynamicResource BorderMediumColorBrush}" BorderThickness="0.6">
                                        <Rectangle HorizontalAlignment="Center" SnapsToDevicePixels="true" Width="0.6" Fill="{DynamicResource BorderDarktColorBrush}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Height" Value="27" />
                        <Setter Property="Margin" Value="-1 1 0 0" />
                        <Setter Property="Padding" Value="0 0 0 0" />
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                        <Setter Property="TextElement.FontWeight" Value="Normal" />
                        <Setter Property="TextElement.Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Grid>
                                        <Border Name="HeaderBorder" Padding="12 0 0 0" BorderBrush="#121212" BorderThickness="0,0,0,0" Background="{TemplateBinding Background}">
                                            <ContentPresenter Name="HeaderContent" Margin="0,0,0,1" RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <!-- disable colum header resize by removing this. -->
                                        <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripperStyle}" HorizontalAlignment="Right" Margin="0,0,0,0"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed" Value="true">
                                            <!-- ヘッダークリック可の場合
                                            <Setter TargetName="HeaderContent" Property="Margin" Value="0,1,0,0" />
                                            -->
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <!-- ヘッダークリック可の場合
                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="white" />
                                            -->
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="HeaderBorder" Property="Opacity" Value=".5" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Role" Value="Floating">
                                <Setter Property="Opacity" Value="0.7" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Canvas Name="PART_FloatingHeaderCanvas">
                                                <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"/>
                                            </Canvas>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Role" Value="Padding">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="Transparent" Background="Transparent"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- ヘッダークリック可の場合  -->
                    <Style x:Key="GridViewColumnHeaderClickStyle" TargetType="GridViewColumnHeader">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Height" Value="27" />
                        <Setter Property="Margin" Value="-1 0 0 0" />
                        <Setter Property="Padding" Value="0 0 0 0" />
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                        <Setter Property="TextElement.FontWeight" Value="Normal" />
                        <Setter Property="TextElement.Foreground" Value="{DynamicResource ControlForegroundColorBrush}" />
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Grid>
                                        <Border Name="HeaderBorder" Padding="12 0 0 0" BorderBrush="#121212" BorderThickness="0,0,0,0" Background="{TemplateBinding Background}">
                                            <ContentPresenter Name="HeaderContent" Margin="0,0,0,1" RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <!-- disable colum header resize by removing this. -->
                                        <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripperStyle}" HorizontalAlignment="Right" Margin="0,0,0,0" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed" Value="true">
                                            
                                            <Setter TargetName="HeaderContent" Property="Margin" Value="0,1,0,0" />
                                            <!-- ヘッダークリック不可の場合
                                            <Setter TargetName="HeaderContent" Property="Margin" Value="0,0,0,4" />
                                            -->
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="HeaderContent" Property="TextElement.Foreground" Value="{DynamicResource ControlLightColorBrush}" />
                                            <!-- <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="#444" /> -->
                                            <!-- ヘッダークリック可の場合削除
                                            -->
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="HeaderBorder" Property="Opacity" Value=".5" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Role" Value="Floating">
                                <Setter Property="Opacity" Value="0.7" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Canvas Name="PART_FloatingHeaderCanvas">
                                                <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"/>
                                            </Canvas>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Role" Value="Padding">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="Transparent" Background="Transparent"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter Property="Focusable" Value="false" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ScrollBarBorderBrush}" />
                        <Setter Property="Background" Value="{DynamicResource ScrollBarColorBrush}" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border x:Name="Border" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">

                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ScrollBarMouseOverColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ScrollBarDisabledBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="RepeatButtonStyleInc" TargetType="{x:Type RepeatButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter Property="Focusable" Value="false" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderThickness="0">
                                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ControlForegroundColorBrush}" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                                        </Path>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ScrollBarDisabledBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="RepeatButtonStyleDec" TargetType="{x:Type RepeatButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter Property="Focusable" Value="false" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderThickness="0">
                                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ControlForegroundColorBrush}" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                                        </Path>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ScrollBarDisabledBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ScrollBarTrackStyle" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border Background="Transparent"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="14" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="14" />
                            </Grid.RowDefinitions>
                            <Border Grid.RowSpan="3" CornerRadius="0" Background="Transparent" />

                            <RepeatButton Grid.Row="0" Height="14" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" Style="{StaticResource RepeatButtonStyleInc}" IsTabStop="False"/>
                            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarTrackStyle}" Focusable="False" Background="Transparent" IsTabStop="False"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ThumbStyle}" Margin="3,0,3,0"></Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarTrackStyle}" Focusable="False" Background="Transparent" IsTabStop="False"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton Grid.Row="2" Height="14" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" Style="{StaticResource RepeatButtonStyleDec}" IsTabStop="False"/>
                        </Grid>
                    </ControlTemplate>

                    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="14" />
                                <ColumnDefinition Width="0.00001*" />
                                <ColumnDefinition MaxWidth="14" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="3" CornerRadius="0" Background="Transparent" />

                            <RepeatButton Grid.Column="0" Style="{StaticResource RepeatButtonStyleInc}" Width="14" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" IsTabStop="False" />
                            <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarTrackStyle}" Focusable="False" Background="Transparent" IsTabStop="False" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ThumbStyle}" Margin="0,3,0,3"></Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarTrackStyle}" Focusable="False" Background="Transparent" IsTabStop="False" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton Grid.Column="2" Style="{StaticResource RepeatButtonStyleDec}" Width="14" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" IsTabStop="False" />
                        </Grid>
                    </ControlTemplate>

                    <Style x:Key="ListviewFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2" StrokeThickness="1" Stroke="#CCCCCC" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ListviewFocusVisual}"/>
                        <Setter Property="Background" Value="{DynamicResource ItemBackgroundColorBrush}"/>
                        
                        <!--
                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                        -->
                        <Setter Property="Foreground" Value="{DynamicResource ItemForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Name="Border" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}" CornerRadius="0" SnapsToDevicePixels="true">
                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="{DynamicResource ItemBackgroundAlt0ColorBrush}" />
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{DynamicResource ItemBackgroundAlt1ColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource ItemMouseOverForegroundColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ItemSelectedBackgroundColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource ItemSelectedForegroundColorBrush}" />
                                <Setter Property="TextElement.FontWeight" Value="Bold"/> 
                            </Trigger> 
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource ItemSelectedNoneFocusedBackgroundColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource ItemSelectedForegroundColorBrush}" />
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <!-- AlternateIndexを使わない場合  -->
                    <Style x:Key="ListViewItemNoAlternateStyle" TargetType="ListViewItem">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ListviewFocusVisual}"/>
                        <Setter Property="Background" Value="{DynamicResource ItemBackgroundColorBrush}"/>
                        <!--
                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                        -->
                        <Setter Property="Foreground" Value="{DynamicResource ItemForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Name="Border" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}" CornerRadius="0" SnapsToDevicePixels="true">
                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource ItemMouseOverForegroundColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource ItemSelectedBackgroundColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource ItemSelectedForegroundColorBrush}" />
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource ItemSelectedNoneFocusedBackgroundColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource ItemSelectedForegroundColorBrush}" />
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>

                <!-- GridSplitter -->
                <ResourceDictionary>

                    <ControlTemplate x:Key="VerticalSplitter" TargetType="{x:Type GridSplitter}">
                        <Grid>
                            <Path Data="M9,3H11V5H9V3M13,3H15V5H13V3M9,7H11V9H9V7M13,7H15V9H13V7M9,11H11V13H9V11M13,11H15V13H13V11M9,15H11V17H9V15M13,15H15V17H13V15M9,19H11V21H9V19M13,19H15V21H13V19Z" Fill="Gray" Stretch="Uniform" Width="16" Height="16" Stroke="Transparent" StrokeThickness="1" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Rectangle Fill="#00FFFFFF" />
                        </Grid>
                    </ControlTemplate>

                    <ControlTemplate x:Key="HolizontalSplitter" TargetType="{x:Type GridSplitter}">
                        <Grid>
                            <Path Data="M3,15V13H5V15H3M3,11V9H5V11H3M7,15V13H9V15H7M7,11V9H9V11H7M11,15V13H13V15H11M11,11V9H13V11H11M15,15V13H17V15H15M15,11V9H17V11H15M19,15V13H21V15H19M19,11V9H21V11H19Z" Fill="Gray" Stretch="Uniform" Width="16" Height="16" Stroke="Transparent" StrokeThickness="1" Margin="4 0 0 0" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Rectangle Fill="#00FFFFFF"/>
                        </Grid>
                    </ControlTemplate>

                    <!-- FocusVisual -->
                    <Style x:Key="GridSplitterFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2" StrokeThickness="1" Stroke="#CCCCCC" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource GridSplitterFocusVisual}"/>
                        <Setter Property="Template" Value="{StaticResource VerticalSplitter}"/>
                        <Style.Triggers>
                            <Trigger Property="ResizeDirection" Value="Rows">
                                <Setter Property="Height" Value="8" />
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Template" Value="{StaticResource HolizontalSplitter}" />
                            </Trigger>
                            <Trigger Property="ResizeDirection" Value="Columns">
                                <Setter Property="Width" Value="8" />
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="Template" Value="{StaticResource VerticalSplitter}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>

                <!-- ListBox-->
                <ResourceDictionary>
                    <!-- https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-3.0/ms754242(v%3dvs.85) -->
                    <!-- https://stackoverflow.com/questions/10487285/custom-listbox-scrollbar-style-issue -->

                    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
                    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
                    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>

                    <ControlTemplate x:Key="NewsListboxScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource CustomScrollBarStyle}"/>
                        </Grid>
                    </ControlTemplate>

                    <Style x:Key="NewsListBoxStyle" TargetType="ListBox">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBox">
                                    <Border Name="Border" Background="Transparent" BorderBrush="Gray" BorderThickness="0" CornerRadius="0" Padding="0 0 0 0">
                                        <ScrollViewer  Focusable="false" Background="Transparent" Template="{DynamicResource NewsListboxScrollViewerControlTemplate}">

                                            <!-- <StackPanel Margin="2" IsItemsHost="True" /> -->

                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                        </ScrollViewer>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="true">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="NewsListBoxScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="Background" Value="Gainsboro" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Rectangle x:Name="Rect" Width="12">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Gainsboro" Offset="1" />
                                                <GradientStop Color="#ccc" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <!--
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#CCC" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        -->
                                                        <!--
                                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Rect" >
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        -->
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#CCC" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#eee" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Rectangle>
                                    <!-- <Border CornerRadius="0" 
                                            Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            Height="8" />
                                    -->
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="NewsListBoxScrollBarStyle" TargetType="{x:Type ScrollBar}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <Border Width="1" Background="Gray" HorizontalAlignment="Center" 
                                                Margin="0 1 0 0"/>
                                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource NewsListBoxScrollBarThumbStyle}"/>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- ListBox2-->
                <ResourceDictionary>

                    <!-- https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-3.0/ms754242(v%3dvs.85) -->
                    <!-- https://stackoverflow.com/questions/10487285/custom-listbox-scrollbar-style-issue -->

                    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
                    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

                    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>

                    <ControlTemplate x:Key="DepthListboxScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                    CanHorizontallyScroll="False" 
                                                    CanVerticallyScroll="False" 
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                    Content="{TemplateBinding Content}" 
                                                    Grid.Column="0" 
                                                    Margin="{TemplateBinding Padding}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                       AutomationProperties.AutomationId="VerticalScrollBar" 
                                       Cursor="Arrow" 
                                       Grid.Column="1" 
                                       Maximum="{TemplateBinding ScrollableHeight}" 
                                       Minimum="0" 
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                       ViewportSize="{TemplateBinding ViewportHeight}" 
                                       Style="{DynamicResource DepthListBoxScrollBarStyle}"/>
                        </Grid>
                    </ControlTemplate>

                    <Style x:Key="DepthListBoxStyle" TargetType="ListBox">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBox">
                                    <Border Name="Border" Background="Transparent" BorderBrush="Gray" BorderThickness="0" CornerRadius="0" Padding="0">
                                        <ScrollViewer  Focusable="false" Background="Transparent" Template="{DynamicResource DepthListboxScrollViewerControlTemplate}">

                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                        </ScrollViewer>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="true">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="DepthListBoxScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="Background" Value="Gainsboro" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Rectangle x:Name="Rect" Width="12">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Gainsboro" Offset="1" />
                                                <GradientStop Color="#ccc" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#CCC" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#eee" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Rectangle>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="DepthListBoxScrollBarStyle" TargetType="{x:Type ScrollBar}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">

                                        <Border Width="1" Background="Gray" HorizontalAlignment="Center" 
                                                Margin="0 0 0 0"/>

                                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource DepthListBoxScrollBarThumbStyle}"/>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--
                        <Style.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                    <ColumnDefinition Width="0.00001*"/>
                                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                </Grid.ColumnDefinitions>
                                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                                    </Track.Thumb>
                                                </Track>
                                                <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                        
                        -->
                    </Style>

                </ResourceDictionary>

                <!-- Left Menu TabControl -->
                <ResourceDictionary>

                    <Style x:Key="SubNavTabFocusVisualStyle">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="DarkGray"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SubNavTabControlStyle" TargetType="{x:Type TabControl}">
                        <Setter Property="OverridesDefaultStyle" Value="False" />
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <Grid KeyboardNavigation.TabNavigation="Local">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <TabPanel x:Name="HeaderPanel" Grid.Row="0" Margin="0 26 -3 0" Panel.ZIndex="1" Background="Transparent" IsItemsHost="True" KeyboardNavigation.TabIndex="1" SnapsToDevicePixels="True"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SubNavTabItemStyle" TargetType="{x:Type TabItem}">
                        <Setter Property="Foreground" Value="{DynamicResource ControlMediumColorBrush}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Effect" Value="{x:Null}"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource SubNavTabFocusVisualStyle}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="48" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{TemplateBinding Width}"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- ぼかし背景を合わせる -->
                                        <Rectangle x:Name="AcrylicBackground2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource WindowBackgroundBaseColorBrush}" Opacity="0.5" Margin="0"></Rectangle>

                                        <Border Name="HeaderBorder" Grid.Row="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="0 0 -2 0" BorderThickness="2 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="1 1 1 1">
                                            <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Margin="0 0 0 0"/>
                                        </Border>
                                        <Border Name="SubContent" Grid.Row="0" Width="120" Height="80" Padding="0" Background="Transparent" BorderThickness="0" CornerRadius="1 1 1 1">
                                            <ContentPresenter Name="Content" Margin="0" ContentSource="Content" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" />
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="DarkGray" />
                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="2 0 0 0" />

                                            <Setter Property="Foreground" Value="{DynamicResource ControlMediumColorBrush}" />
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="Gray" />
                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="2 0 0 0" />

                                            <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}" />
                                        </MultiTrigger>

                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Panel.ZIndex" Value="255" />

                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource AccentWarmLightColorBrush}" />
                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="2 0 0 0" />

                                            <Setter TargetName="SubContent" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="SubContent" Property="Opacity" Value="0.4" />

                                            <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />

                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect Color="{DynamicResource ShadowTabColor}" Opacity="0.6" ShadowDepth="0.9" BlurRadius="2" Direction="300"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- ScrollViewer-->
                <ResourceDictionary>

                    <!-- スクロールバーの幅 -->
                    <sys:Double x:Key="ScrollBarSize">14</sys:Double>
                    <!-- ボタンの長さ -->
                    <sys:Double x:Key="ScrollBarRepeatButtonSize">14</sys:Double>
                    <!-- スクロールバーのマージン -->
                    <sys:Double x:Key="ScrollBarMarginSize">0</sys:Double>

                    <Style x:Key="ScrollViewerFocusVisualStyle">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="{DynamicResource ControlMediumColorBrush}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- 終端の三角ボタンのスタイル -->
                    <Style x:Key="ScrollBarRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderBrush="{DynamicResource ScrollBarBorderBrush}" BorderThickness="1">
                                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ScrollBarHilightBrush}" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ScrollBarPressedBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource ScrollBarDisabledBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- トラック（レーン）のスタイル -->
                    <Style x:Key="ScrollBarTrackStyle" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border Background="Transparent"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- つまみのスタイル -->
                    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border x:Name="CustamThumb" CornerRadius="0" Background="{DynamicResource ScrollBarColorBrush}" BorderBrush="{DynamicResource ScrollBarBorderBrush}" BorderThickness="1" Margin="1"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="CustamThumb" Property="Background" Value="{DynamicResource ScrollBarMouseOverColorBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsDragging" Value="True">
                                            <Setter TargetName="CustamThumb" Property="Background" Value="{DynamicResource ScrollBarPressedBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- カスタムスクロールバーのスタイル -->
                    <Style x:Key="CustomScrollBarStyle" TargetType="{x:Type ScrollBar}">
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Focusable" Value="true"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ScrollViewerFocusVisualStyle}"/>
                        <Style.Triggers>
                            <!-- 縦向きのスクロールバー -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Width" Value="{StaticResource ScrollBarSize}"/>
                                <Setter Property="Height" Value="Auto" />
                                <Setter Property="Margin">
                                    <Setter.Value>
                                        <Thickness Left="0" Top="{StaticResource ScrollBarMarginSize}" Right="{StaticResource ScrollBarMarginSize}" Bottom="{StaticResource ScrollBarMarginSize}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{StaticResource ScrollBarRepeatButtonSize}"/>
                                                    <RowDefinition/>
                                                    <RowDefinition MaxHeight="{StaticResource ScrollBarRepeatButtonSize}"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="3" CornerRadius="0" Background="{DynamicResource ScrollBarTrackBrush}" />
                                                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarRepeatButtonStyle}" Height="{StaticResource ScrollBarRepeatButtonSize}" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                                                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarTrackStyle}" Command="ScrollBar.PageUpCommand" />
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumbStyle}" Margin="0,1,0,1"/>
                                                    </Track.Thumb>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarTrackStyle}" Command="ScrollBar.PageDownCommand" />
                                                    </Track.IncreaseRepeatButton>
                                                </Track>
                                                <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarRepeatButtonStyle}" Height="{StaticResource ScrollBarRepeatButtonSize}" Command="ScrollBar.LineDownCommand"  Content="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- 横向きのスクロールバー -->
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="Height" Value="{StaticResource ScrollBarSize}" />
                                <Setter Property="Margin">
                                    <Setter.Value>
                                        <Thickness Left="{StaticResource ScrollBarMarginSize}" Top="0" Right="{StaticResource ScrollBarMarginSize}" Bottom="{StaticResource ScrollBarMarginSize}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MaxWidth="{StaticResource ScrollBarRepeatButtonSize}"/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition MaxWidth="{StaticResource ScrollBarRepeatButtonSize}"/>
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.ColumnSpan="3" CornerRadius="0" Background="{StaticResource ScrollBarTrackBrush}" />
                                                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarRepeatButtonStyle}" Width="{StaticResource ScrollBarRepeatButtonSize}" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                                                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarTrackStyle}"  Command="ScrollBar.PageLeftCommand" />
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumbStyle}"  Margin="1,0,1,0"/>
                                                    </Track.Thumb>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarTrackStyle}" Command="ScrollBar.PageRightCommand" />
                                                    </Track.IncreaseRepeatButton>
                                                </Track>
                                                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarRepeatButtonStyle}" Width="{StaticResource ScrollBarRepeatButtonSize}" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="CustomScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource CustomScrollBarStyle}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource CustomScrollBarStyle}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- Settings TabControl -->
                <ResourceDictionary>

                    <Style x:Key="SettingsTabFocusVisualStyle">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="{DynamicResource ControlMediumColorBrush}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SettingsTabItemStyle" TargetType="{x:Type TabItem}">
                        <Setter Property="Foreground" Value="{DynamicResource TitleTextColorBrush}" />
                        <Setter Property="Background" Value="{DynamicResource WindowBackgroundColorBrush}"/>
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{StaticResource SettingsTabFocusVisualStyle}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Border Name="Border" BorderThickness="0 0 0 1" BorderBrush="Transparent">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <Border Name="HeaderBorder" Grid.Row="0" Margin="0 0 0 0" BorderThickness="0 0 0 0" CornerRadius="0">
                                                <ContentPresenter x:Name="ContentSite" ContentSource="Header" RecognizesAccessKey="True" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource ControlDarkColorBrush}" />
                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="DarkGray" />
                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0 0 0 1" />

                                            <Setter Property="Background" Value="{DynamicResource ControlMediumColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>

                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />

                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="Gray" />
                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0 0 0 1" />
                                            <Setter Property="Foreground" Value="{DynamicResource TitleTextColorBrush}" />
                                        </MultiTrigger>

                                        <Trigger Property="IsSelected" Value="True">

                                            <Setter Property="Margin" Value="0 0 0 0" />

                                            <Setter Property="Panel.ZIndex" Value="0" />

                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0 0 0 1" />

                                            <Setter Property="Foreground" Value="{DynamicResource TitleTextColorBrush}" />

                                        </Trigger>

                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="gray" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFC9C7BA" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SettingsTabControlStyle" TargetType="{x:Type TabControl}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TabPanel Grid.Row="0" Grid.Column="0" x:Name="HeaderPanel" HorizontalAlignment="Left" IsItemsHost="True" Margin="0 0 0 0"  Background="{DynamicResource WindowBackgroundColorBrush}"/>
                                        <Border Grid.Row="0" Grid.Column="1" x:Name="Border" BorderThickness="0 0 0 0" BorderBrush="DimGray" Margin="0" Background="{DynamicResource BoardBackgroundColorBrush}">
                                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent" RecognizesAccessKey="True"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- NoChrome TabControl -->
                <ResourceDictionary>

                    <Style x:Key="NoChromeTabFocusVisualStyle">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="{DynamicResource ControlMediumColorBrush}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="NoChromeTabControl" TargetType="{x:Type TabControl}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <Grid Background="{DynamicResource BoardBackgroundColorBrush}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <TabPanel Grid.Row="0" x:Name="HeaderPanel" HorizontalAlignment="Left" IsItemsHost="True" Margin="0 0 0 0"/>
                                        <Border Grid.Row="1" x:Name="Border" BorderThickness="0 0.5 0 0" BorderBrush="DimGray" Margin="0">
                                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent" RecognizesAccessKey="True"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="NoChromeTabHeader" TargetType="{x:Type TabItem}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource NoChromeTabFocusVisualStyle}"/>
                        <Setter Property="Height" Value="26" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Grid Name="Panel">
                                        <Border Name="Border" BorderThickness="0 0 0 2" BorderBrush="Transparent" Margin="0 0 0 0" Background="{DynamicResource BoardBackgroundColorBrush}">
                                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" Margin="4"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter TargetName="ContentSite" Property="TextBlock.FontWeight" Value="Normal" />

                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground"  Value="{DynamicResource ControlLightColorBrush}"/>
                                            <Setter TargetName="ContentSite" Property="TextBlock.FontWeight" Value="Normal" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlLightColorBrush}"/>
                                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{DynamicResource NormalTextColorBrush}"/>
                                            <Setter TargetName="ContentSite" Property="TextBlock.FontWeight" Value="Bold" />
                                        </Trigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
