<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="MPDCtrl.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MPDCtrl.Views"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:vm="using:MPDCtrl.ViewModels" 
    d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
    mc:Ignorable="d"
    NavigationCacheMode="Required">

    <Grid x:Name="ContentGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" x:Name="HeaderGrid" Margin="24,0,24,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Page title -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" x:Uid="PageTitle_Settings" FontSize="{StaticResource FontSizePageTitle}" FontWeight="SemiBold"/>
                <TextBlock Grid.Column="1" FontSize="{StaticResource FontSizePageSubTitle}" Text="" VerticalAlignment="Bottom" Padding="48,0,0,4" Opacity="0.7"/>
            </Grid>
        </Grid>

        <Grid Grid.Row="1" x:Name="BodyGrid" Margin="24,0,0,0">
            <ScrollViewer Margin="0,24,0,0">
                <StackPanel Spacing="24">
                    <controls:SettingsExpander x:Name="settingsCardTheme"
                            VerticalAlignment="Top"
                            Header=""
                            Description="asdf"
                            HeaderIcon="{ui:FontIcon Glyph=&#xE91B;}"
                            IsEnabled="True"
                            IsExpanded="False">
                        <!--  TODO:   -->

                        <controls:SettingsExpander.Items>

                            <controls:SettingsCard Header="asdfsadf" HorizontalContentAlignment="Left" ContentAlignment="Vertical" Description="fdasa">
                                <TextBox MinWidth="300" Width="500" PlaceholderText="" HorizontalAlignment="Stretch" Text="ddsaf"/>
                            </controls:SettingsCard>

                            <controls:SettingsCard HorizontalContentAlignment="Left" ContentAlignment="Vertical" Header="sadfs">
                                <ComboBox x:Name="ComboBoxKind" PlaceholderText="選択" MinWidth="300" Margin="0,0,0,0" SelectedIndex="-1" >
                                    <!-- ItemsSource="{x:Bind ViewModel.Kinds, Mode=OneWay}" SelectedItem="{x:Bind ViewModel.SelectedKind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" -->
                                    <!--<ComboBox.ItemTemplate>
                                        
                                        <DataTemplate x:DataType="modres:Kind">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{x:Bind Label, Mode=OneWay}" Margin="0,0,5,0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                        
                                    </ComboBox.ItemTemplate>-->
                                </ComboBox>
                            </controls:SettingsCard>

                            <controls:SettingsCard Header="afd" HorizontalContentAlignment="Left" ContentAlignment="Vertical">
                                <CheckBox Content="hoge" IsChecked="False"/>
                            </controls:SettingsCard>

                        </controls:SettingsExpander.Items>

                    </controls:SettingsExpander>
                    
                    
                    <StackPanel>
                        <TextBlock x:Uid="Settings_Theme" Margin="0,0,0,12" />

                        <RadioButton x:Uid="Settings_Theme_Light" IsEnabled="{x:Bind ViewModel.IsBackdropEnabled, Mode=OneWay}" Command="{x:Bind ViewModel.SwitchThemeCommand}" IsChecked="{x:Bind ViewModel.Theme, Converter={StaticResource ElementThemeEnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}" FontSize="15" GroupName="AppTheme">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Light</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton x:Uid="Settings_Theme_Dark" IsEnabled="{x:Bind ViewModel.IsBackdropEnabled, Mode=OneWay}" Command="{x:Bind ViewModel.SwitchThemeCommand}" IsChecked="{x:Bind ViewModel.Theme, Converter={StaticResource ElementThemeEnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}" FontSize="15" GroupName="AppTheme">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Dark</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton x:Uid="Settings_Theme_Default" IsEnabled="True" Command="{x:Bind ViewModel.SwitchThemeCommand}" IsChecked="{x:Bind ViewModel.Theme, Converter={StaticResource ElementThemeEnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}" FontSize="15" GroupName="AppTheme">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Default</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                    </StackPanel>

                    <StackPanel>

                        <TextBlock x:Uid="Settings_SystemBackdrop" Margin="0,0,0,12"/>

                        <StackPanel>

                            <RadioButton x:Uid="Settings_SystemBackdrop_Acrylic" IsEnabled="{x:Bind ViewModel.IsAcrylicSupported,Mode=OneWay}" Command="{x:Bind ViewModel.SwitchSystemBackdropCommand}" CommandParameter="Acrylic" IsChecked="{x:Bind ViewModel.Material, Converter={StaticResource SystemBackdropEnumToBooleanConverter}, ConverterParameter=Acrylic, Mode=OneWay}" FontSize="15" GroupName="AppMaterial"/>
                            <RadioButton x:Uid="Settings_SystemBackdrop_Mica" IsEnabled="{x:Bind ViewModel.IsMicaSupported,Mode=OneWay}" Command="{x:Bind ViewModel.SwitchSystemBackdropCommand}" CommandParameter="Mica" IsChecked="{x:Bind ViewModel.Material, Converter={StaticResource SystemBackdropEnumToBooleanConverter}, ConverterParameter=Mica, Mode=OneWay}" FontSize="15" GroupName="AppMaterial"/>
                            <RadioButton x:Uid="Settings_SystemBackdrop_MicaAlt" IsEnabled="{x:Bind ViewModel.IsMicaSupported,Mode=OneWay}" Command="{x:Bind ViewModel.SwitchSystemBackdropCommand}" CommandParameter="MicaAlt" IsChecked="{x:Bind ViewModel.Material, Converter={StaticResource SystemBackdropEnumToBooleanConverter}, ConverterParameter=MicaAlt, Mode=OneWay}" FontSize="15" GroupName="AppMaterial"/>
                            <RadioButton x:Uid="Settings_SystemBackdrop_None" IsEnabled="True" Command="{x:Bind ViewModel.SwitchSystemBackdropCommand}" CommandParameter="None" IsChecked="{x:Bind ViewModel.Material, Converter={StaticResource SystemBackdropEnumToBooleanConverter}, ConverterParameter=None, Mode=OneWay}" FontSize="15" GroupName="AppMaterial"/>

                        </StackPanel>

                    </StackPanel>

                </StackPanel>
            </ScrollViewer>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1008" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Margin" Value="48,0,48,0" />
                        <Setter Target="BodyGrid.Margin" Value="48,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Margin" Value="24,0,24,0" />
                        <Setter Target="BodyGrid.Margin" Value="24,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="340" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Margin" Value="16,0,16,0" />
                        <Setter Target="BodyGrid.Margin" Value="16,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Margin" Value="16,0,16,0" />
                        <Setter Target="BodyGrid.Margin" Value="16,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
