<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
	  
	  <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
	  <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
	  <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>

  </PropertyGroup>

  <ItemGroup>
	  <AvaloniaResource Include="Assets\**" />
	  <TrimmerRootDescriptor Include="Roots.xml" />
  </ItemGroup>

  <ItemGroup>
	  <PackageReference Include="Avalonia" Version="11.0.0-preview5" />
	  <PackageReference Include="Avalonia.Controls.DataGrid" Version="11.0.0-preview5" />
	  <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.0-preview5" />
	  <PackageReference Include="Avalonia.ReactiveUI" Version="11.0.0-preview5" />
	  <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
	  <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.0.0-preview5" />
	  <PackageReference Include="XamlNameReferenceGenerator" Version="1.6.1" />
  </ItemGroup>

  <ItemGroup>
	  <Compile Update="Properties\Resources.Designer.cs">
		  <DesignTime>True</DesignTime>
		  <AutoGen>True</AutoGen>
		  <DependentUpon>Resources.resx</DependentUpon>
	  </Compile>
  </ItemGroup>

  <ItemGroup>
	  <EmbeddedResource Update="Properties\Resources.ja-JP.resx">
		  <Generator></Generator>
	  </EmbeddedResource>
	  <EmbeddedResource Update="Properties\Resources.resx">
		  <Generator>PublicResXFileCodeGenerator</Generator>
		  <LastGenOutput>Resources.Designer.cs</LastGenOutput>
	  </EmbeddedResource>
  </ItemGroup>


  <PropertyGroup Condition="'$(IsWindows)'=='true'">
		<DefineConstants>Windows</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(IsOSX)'=='true'">
		<DefineConstants>OSX</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(IsLinux)'=='true'">
		<DefineConstants>Linux</DefineConstants>
	</PropertyGroup>
	
</Project>
