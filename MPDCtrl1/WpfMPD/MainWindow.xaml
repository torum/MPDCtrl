<fw:AcrylicWindow x:Class="WpfMPD.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfMPD"
        mc:Ignorable="d"
        xmlns:common="clr-namespace:WpfMPD.Common"
        common:EnableDragHelper.EnableDrag="False"
        common:MaximizeDoubleClickHelper.MaximizeDoubleClick="True"
        Background="Transparent"
        BorderThickness="0"
                  
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        fw:AcrylicWindow.Enabled="True"
        fw:AcrylicWindow.ShowTitleBar="False"
        fw:AcrylicWindow.ExtendViewIntoTitleBar="True"
        
        fw:AcrylicWindow.TintOpacity="0.2"
                  fw:AcrylicWindow.TintColor="WhiteSmoke"
                  fw:AcrylicWindow.FallbackColor="Transparent"
                  
        WindowStartupLocation="CenterScreen"
        Title="MPDCtrl" 
        Height="520" Width="300"
                  MinHeight="520" MinWidth="300"
        xmlns:properties="clr-namespace:MPDCtrl.Properties"
        Closing="Window_Closing"
        DataContext="{StaticResource MainViewModel}">
    <!-- 
        AllowsTransparency="True" 
        WindowStyle="None"
    -->
    <!-- 
    I don't like to include Microsoft.Expression.Interactions.dll, System.Windows.Interactivity.dll 
    and all that crap just for this.
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction  Command="{Binding WindowClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    Removed from projectref:
    - Microsoft.Expression.Interactions
    - System.Windows.Interactivity
    
    Also Removed from xaml namespace
    - xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    
    Assigned 
    + WindowClosingCommand at Close button.
    -->

    <fw:AcrylicWindow.InputBindings>
        <KeyBinding Command="{Binding PlayCommand}"
                            Key="Play" />
        <KeyBinding Command="{Binding PlayCommand}"
                            Key="MediaPlayPause" />
        <KeyBinding Command="{Binding PlayNextCommand}"
                            Key="MediaNextTrack" />
        <KeyBinding Command="{Binding PlayPrevCommand}"
                            Key="MediaPreviousTrack" />
        <KeyBinding Command="{Binding PlayStopCommand}"
                            Key="MediaStop" />
        <KeyBinding Command="{Binding VolumeMuteCommand}"
                            Key="VolumeMute" />
        <KeyBinding Command="{Binding VolumeDownCommand}"
                            Key="VolumeDown" />
        <KeyBinding Command="{Binding VolumeUpCommand}"
                            Key="VolumeUp" />
    </fw:AcrylicWindow.InputBindings>

    <fw:AcrylicWindow.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="Cursor" Value="Wait" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </fw:AcrylicWindow.Style>

    <Grid x:Name="BackgroundGrid" 
          Background="Transparent">
        <Rectangle x:Name="AcrylicBackground" 
                   common:EnableDragHelper.EnableDrag="true"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   Fill="Black" Opacity="0.6">
            <Rectangle.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="mStayOnTop" Header="{x:Static properties:Resources.StayOnTop}" 
                              Click="MenuItem_mStayOnTop_Click" 
                              IsCheckable="True"/>
                </ContextMenu>
            </Rectangle.ContextMenu>
        </Rectangle>
        <Grid x:Name="LayoutGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="42"/>
                <RowDefinition Height="24"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="48"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="48"/>
                <RowDefinition Height="12"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="29"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="29"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="1" x:Name="AppTitle" 
                       Text="MPD Ctrl for Desktop" 
                       TextElement.Foreground="WhiteSmoke" 
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center" 
                       TextElement.FontWeight="Bold"
                       Visibility="{Binding ShowSettings,Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Triggers>
                    <EventTrigger RoutedEvent="TextBlock.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="AppTitle" 
                                                 Storyboard.TargetProperty="(TextBlock.Opacity)" 
                                                 From="1.0" To="0.0" Duration="0:0:5" 
                                                 AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </TextBlock.Triggers>
            </TextBlock>

            <TextBlock Grid.Row="0" Grid.Column="1" x:Name="AppErrorMsg" 
                       Text="{Binding ErrorMessage, NotifyOnTargetUpdated=True}" 
                       TextElement.Foreground="Yellow" 
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center" 
                       TextElement.FontWeight="Bold"
                       Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock.Triggers>
                    <EventTrigger RoutedEvent="Binding.TargetUpdated">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:10" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </TextBlock.Triggers>
            </TextBlock>
            
            <Grid Grid.Row="6" Grid.Column="1" x:Name="PlaybackButtons"
                  Width="230" 
                  Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="PlayButton" Grid.Column="1" 
                HorizontalAlignment="Center" VerticalAlignment="Center" Height="82" Width="82" 
                Background="Transparent" Foreground="White"
                RenderTransformOrigin="0.5,0.5"
                Style="{StaticResource PathButton}" Command="{Binding PlayCommand}" Content="{Binding PlayButton}">
                </Button>

                <Button x:Name="NextButton" Grid.Column="2" 
                HorizontalAlignment="Center" Height="42" Width="42" 
                Background="Transparent" Foreground="White"
                Content="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M8,8L13,12L8,16M14,8H16V16H14"
                Style="{StaticResource PathButton}" Command="{Binding PlayNextCommand}" >
                </Button>

                <Button x:Name="BackButton" Grid.Column="0" 
                HorizontalAlignment="Center" Height="42" Width="42"
                Background="Transparent" Foreground="White"
                Content="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M8,8H10V16H8M16,8V16L11,12"
                Style="{StaticResource PathButton}" Command="{Binding PlayPrevCommand}" >
                </Button>
            </Grid>

            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="Playlist" 
                      Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                      Margin="0 0 0 0" Padding="0 0 0 0"
                      Background="Transparent" Foreground="White" Style="{StaticResource ComboBoxFlatStyle}"
                      ItemsSource="{Binding Playlists}" SelectedValue="{Binding SelectedPlaylist}"
                      Tag="Current Play Queue">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=.}" ></TextBlock>
                        </StackPanel>
                    </DataTemplate>

                </ComboBox.ItemTemplate>
            </ComboBox>

            <ListView Grid.Row="3" Grid.Column="1" x:Name="SongListView"
                      Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Foreground="Gray" BorderBrush="Gray" BorderThickness="0" Background="Transparent"
                      Padding="0 0 4 0"
                      ItemsSource="{Binding Songs}" SelectedItem="{Binding Mode=TwoWay,Path=SelectedSong}" SelectionMode="Extended"
                      SelectionChanged="SongListView_SelectionChanged"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Visible">
                <ListView.Resources>
                    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="Background" Value="Gainsboro" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Rectangle x:Name="Rect" Width="24">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Gainsboro" Offset="1" />
                                                <GradientStop Color="#ccc" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <!--
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#CCC" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        -->
                                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="Rect" >
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#CCC" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="Rect" >
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#eee" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Rectangle>
                                    <!-- <Border CornerRadius="0" 
                                            Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            Height="8" />
                                    -->
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="RepeatButtonStyleInc" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" Opacity="0.1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="Transparent"/>
                                                        <GradientStop Color="Transparent" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Path x:Name="Arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding Content, 
                                            RelativeSource={RelativeSource TemplatedParent}}" >
                                            <Path.Fill>
                                                <SolidColorBrush Color="Gainsboro"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                    <Style x:Key="RepeatButtonStyleDec" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="Transparent"/>
                                                        <GradientStop Color="Transparent" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Path x:Name="Arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding Content, 
                                            RelativeSource={RelativeSource TemplatedParent}}" >
                                            <Path.Fill>
                                                <SolidColorBrush Color="Gainsboro"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="18" />
                            </Grid.RowDefinitions>
                            <Border Grid.RowSpan="3" CornerRadius="0" Background="Transparent" />
                            <RepeatButton Grid.Row="0" Height="18" Command="ScrollBar.LineUpCommand"
                                          Content="M 0 4 L 8 4 L 4 0 Z" 
                                          Style="{StaticResource RepeatButtonStyleInc}"/>
                            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" 
                                                  Style="{StaticResource RepeatButtonStyleDec}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ThumbStyle}"></Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand" 
                                                  Style="{StaticResource RepeatButtonStyleInc}"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton Grid.Row="3" Height="18" Command="ScrollBar.LineDownCommand" 
                                          Content="M 0 0 L 4 4 L 8 0 Z" 
                                          Style="{StaticResource RepeatButtonStyleDec}"/>
                        </Grid>
                    </ControlTemplate>

                    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
                        <Setter Property="Width" Value="18" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                                            <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                        <Rectangle
                                                                Width="1"
                                                                HorizontalAlignment="Center"
                                                                Fill="{TemplateBinding Background}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="Black" />
                                    <GradientStop Offset="1" Color="White" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="BorderThickness" Value="0" />
                        <!--
                        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
                        -->
                        <Style.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Width" Value="18"/>
                                <Setter Property="Height" Value="Auto" />
                                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="Padding" Value="6 2 6 2" />
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Header="SongID" Width="auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Viewbox Width="12" Height="12">
                                        <Canvas Width="18" Height="18">
                                            <Path Data="M12,3V12.26C11.5,12.09 11,12 10.5,12C8,12 6,14 6,16.5C6,19 8,21 10.5,21C13,21 15,19 15,16.5V6H19V3H12Z" 
                                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" />
                                        </Canvas>
                                    </Viewbox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Title" Width="2000">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Path=Title}" Padding="3" />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Name="Border"
                                        Margin="{TemplateBinding Margin}"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        ClipToBounds="{TemplateBinding ClipToBounds}"
                                        CornerRadius="0"
                                        SnapsToDevicePixels="true">

                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <!--  http://stackoverflow.com/questions/1035023/firing-a-double-click-event-from-a-wpf-listview-item-using-mvvm  -->
                                        <!--
                                        <Border.InputBindings>
                                            <MouseBinding
                                                Command="{Binding Path=DataContext.OpenBuildingCommandWithParam, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                                CommandParameter="{Binding Path=DataContext.SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                                Gesture="LeftDoubleClick" />
                                        </Border.InputBindings>
                                        -->
                                    </Border>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                        -->
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <Grid Grid.Row="5" Grid.Column="1" x:Name="PlaybackOptions"
                   Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="24"/>
                </Grid.ColumnDefinitions>

                <ToggleButton x:Name="RepeatButton" Grid.Column="0" 
                    Template="{StaticResource PathToggleButton}" IsChecked="{Binding Mode=TwoWay,Path=Repeat}"
                    Width="16" Height="16" Padding="0" Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center"
                    Foreground="White" Content="M17,17H7V14L3,18L7,22V19H19V13H17M7,7H17V10L21,6L17,2V5H5V11H7V7Z">
                </ToggleButton>

                <Slider x:Name="SliderSeek" Grid.Column="1" 
                    VerticalAlignment="Center"  Margin="6 0 6 0"
                    Foreground="Gray" Background="Transparent" 
                    IsMoveToPointEnabled="True"
                    Style="{StaticResource SeekSliderButtonStyle}"
                    Minimum="1" Maximum="{Binding Mode=TwoWay,Path=Time}"
                    Value="{Binding Mode=TwoWay,Path=Elapsed}">
                </Slider>

                <ToggleButton x:Name="ShuffleButton" Grid.Column="2" IsChecked="{Binding Mode=TwoWay,Path=Random}"
                    Template="{StaticResource PathToggleButton}" Width="16" Height="16" Padding="0" Margin="4" 
                    VerticalAlignment="Center" HorizontalAlignment="Center"
                    Foreground="White"
                    Content="M17,3L22.25,7.5L17,12L22.25,16.5L17,21V18H14.26L11.44,15.18L13.56,13.06L15.5,15H17V12L17,9H15.5L6.5,18H2V15H5.26L14.26,6H17V3M2,6H6.5L9.32,8.82L7.2,10.94L5.26,9H2V6Z">
                </ToggleButton>

            </Grid>

            <Slider Grid.Row="7" Grid.Column="1" x:Name="SliderVol"
                     Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                    IsMoveToPointEnabled="True" Margin="4 0 4 0"
                Foreground="Gainsboro" Maximum="100" Value="{Binding Volume}"
                VerticalAlignment="Center" Style="{StaticResource CircleSliderButtonStyle}">
                <Slider.Background>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0" Color="Transparent" />
                            <GradientStop Offset="1" Color="#7F777171" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Slider.Background>
            </Slider>

            <Button Grid.Row="0" Grid.Column="0" x:Name="SettingsButton"
                     Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Command="{Binding ShowSettingsCommand}"
             Style="{StaticResource PathButton}" 
             Foreground="#999999" Background="Transparent" ToolTip="{x:Static properties:Resources.Settings}"
             Height="24" Width="24" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4 5 0 0"
             Content="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,
8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,
11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,
4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,
2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,
5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,
12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,
18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,
21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,
18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z">
            </Button>

            <TabControl Grid.Column="1" Grid.Row="1" Grid.RowSpan="7" x:Name="SettingsTab" 
                        Style="{StaticResource NoChromeTabControl}"
                        Margin="0"
                        BorderThickness="0"
                        Background="Transparent"
                        Visibility="{Binding ShowSettings,Converter={StaticResource BooleanToVisibilityConverter}}">
                <TabItem Header="{x:Static properties:Resources.Settings}" 
                         Style="{StaticResource NoChromeTabHeader}"
                         Background="Transparent"
                         BorderThickness="0"
                         Width="100"
                         Padding="4"
                         TextElement.Foreground="White">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="1" x:Name="AppErrorMsgSettings"
                                   Margin="0 4 0 0"
                                   Text="{Binding ErrorMessage, NotifyOnTargetUpdated=True}" 
                                   TextElement.Foreground="Yellow" 
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" 
                                   TextElement.FontWeight="Bold">
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:10" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>

                        <StackPanel Grid.Row="1" x:Name="InputPanel">
                            <TextBlock Text="{x:Static properties:Resources.Host}" TextElement.Foreground="White"></TextBlock>
                            <TextBox Text="{Binding Host, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                     Margin="0 4 0 12">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBlock Text="{x:Static properties:Resources.Port}" TextElement.Foreground="White"></TextBlock>
                            <TextBox Text="{Binding Port, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Margin="0 4 142 12">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBlock Text="{x:Static properties:Resources.Password}" TextElement.Foreground="White"></TextBlock>
                            <PasswordBox x:Name="PasswordBox" PasswordChar="*" Tag="{Binding Password}" Margin="0 4 0 12" ToolTip="{x:Static properties:Resources.Optional}" PasswordChanged="PasswordBox_PasswordChanged">
                                <PasswordBox.Style>
                                    <Style TargetType="{x:Type PasswordBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type PasswordBox}">
                                                    <Grid Background="{TemplateBinding Background}">
                                                        <ScrollViewer x:Name="PART_ContentHost"/>
                                                        <TextBlock x:Name="UserMessage"
                                                                   Margin="5,0,5,0"
                                                                   Text="{Binding Password}" 
                                                                   IsHitTestVisible="False"
                                                                   HorizontalAlignment="Left"
                                                                   VerticalAlignment="Center"
                                                                   Visibility="Visible"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="Tag" Value=""/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Visibility" TargetName="UserMessage" Value="Hidden"/>
                                                            <Setter Property="Text" TargetName="UserMessage" Value=""/>
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsKeyboardFocusWithin" Value="true"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Visibility" TargetName="UserMessage" Value="Hidden"/>
                                                            <Setter Property="Text" TargetName="UserMessage" Value=""/>
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </PasswordBox.Style>
                            </PasswordBox>
                            

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 12 0 0">
                                <Button Content="{x:Static properties:Resources.Connect}" Command="{Binding NewConnectinSettingCommand}" CommandParameter="{Binding ElementName=PasswordBox}" Padding="4" Width="100" IsDefault="False"></Button>
                                <Button Content="{x:Static properties:Resources.Cancel}" Command="{Binding ShowSettingsCommand}" Padding="4" Width="100" Margin="24 0 0 0"></Button>
                            </StackPanel>
                        </StackPanel>

                        <Grid Grid.Row="2" x:Name="ProfilePanel"
                          Margin="0 48 0 8" VerticalAlignment="Stretch" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{x:Static properties:Resources.SavedProfiles}" TextElement.Foreground="White" Margin="0 0 0 0"></TextBlock>
                            <ListView Grid.Row="1" 
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0 4 0 0" MinHeight="74"
                                      ItemsSource="{Binding ProfileList}" SelectedItem="{Binding SelectedProfile}"
                                      SelectionChanged="ListView_SelectionChanged">
                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                <Setter Property="Padding" Value="6 2 6 2" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>

                                        <GridViewColumn Header="{x:Static properties:Resources.Profile}" Width="180">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel HorizontalAlignment="Left">
                                                        <TextBlock Text="{Binding Path=Name}" Padding="3" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="" Width="24">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Viewbox Width="12" Height="12" x:Name="DefaultCheck">
                                                        <Canvas Width="18" Height="18">
                                                            <Path Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" 
                                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" 
                                                              Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}},Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 12 0 0">
                                <Button Content="{x:Static properties:Resources.Add}" Command="{Binding AddConnectinSettingCommand}" Padding="4" Width="100"></Button>
                                <Button Content="{x:Static properties:Resources.Delete}" Command="{Binding DeleteConnectinSettingCommand}" Padding="4" Width="100" Margin="24 0 0 0"></Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static properties:Resources.About}"
                         Style="{StaticResource NoChromeTabHeader}"
                         Background="Transparent"
                         BorderThickness="0"
                         Width="100"
                         Padding="4"
                         TextElement.Foreground="White">

                    <StackPanel>
                        <Label Content="" TextElement.Foreground="White"/>
                        <Label Content="MPDCtrl for Desktop 1.1.6" TextElement.Foreground="White"/>
                        <Label Content="{x:Static properties:Resources.Developer}" TextElement.Foreground="White"/>
                        <Label Content="{x:Static properties:Resources.Website}" TextElement.Foreground="White"/>
                        <!--
                        <TextBox Text="{x:Static properties:Resources.WebsiteURL}" Margin="4" Background="Transparent" TextElement.Foreground="White" BorderThickness="0" IsReadOnly="True" HorizontalAlignment="Center">
                           
                        </TextBox>
                         -->
                        <TextBlock HorizontalAlignment="Right" Margin="4 0 4 4">
                            <Hyperlink NavigateUri="https://torum.github.io/MPDCtrl/" Click="Hyperlink_Click">https://torum.github.io/MPDCtrl/</Hyperlink>
                        </TextBlock>

                        <Label Content="Twitter :" TextElement.Foreground="White"/>
                        <TextBlock HorizontalAlignment="Right" Margin="4 0 4 4">
                            <Hyperlink NavigateUri="https://twitter.com/torum_apps" RequestNavigate="Hyperlink_RequestNavigate">https://twitter.com/torum_apps</Hyperlink>
                        </TextBlock>

                        <Border Height="3" Margin="3"></Border>

                        <Label Content="{x:Static properties:Resources.DonateBitcoin}" TextElement.Foreground="White"/>
                        <TextBox Padding="6" Margin="6" Text="1HQv6ib57So9j8AXxCXwWugVPnTcjvg9cn" IsReadOnly="True" HorizontalAlignment="Stretch"/>

                        <Label Content="{x:Static properties:Resources.LicenseTitle}" TextElement.Foreground="White"/>
                        <TextBox Margin="4 4 4 4" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" Height="100" Text="{x:Static properties:Resources.License}"/>
                        <Button Content="{x:Static properties:Resources.OK}" 
                                Width="100" 
                                Margin="24"
                                Command="{Binding ShowSettingsCommand}"></Button>
                    </StackPanel>
                    
                </TabItem>
            </TabControl>
        
            <Button Grid.Row="0" Grid.Column="2" x:Name="CloseButton"
                    Content="M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z"
                    ToolTip="{x:Static properties:Resources.Close}"
                    Style="{StaticResource PathButton}" 
                    Foreground="Red" 
                    Height="24" Width="24" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 5 4 0"
                    Click="PathButton_Click" 
                    Command="{Binding WindowClosingCommand}">
            </Button>
        </Grid>
    
    </Grid>

</fw:AcrylicWindow>
