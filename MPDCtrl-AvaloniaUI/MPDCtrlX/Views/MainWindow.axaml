<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:MPDCtrlX.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:ui="using:FluentAvalonia.UI.Controls"
		xmlns:prop="clr-namespace:MPDCtrlX.Properties"
        xmlns:views="clr-namespace:MPDCtrlX.Views"
		xmlns:mod="clr-namespace:MPDCtrlX.Models"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="MPDCtrlX.Views.MainWindow"
		x:DataType="vm:MainViewModel"
        Icon="/Assets/MPDCtrlX.ico"
        Title="MPDCtrlX"
             x:CompileBindings="True" Cursor="Arrow" WindowStartupLocation="Manual" MinWidth="740" MinHeight="180">
	<!-- Background="{DynamicResource ThemeBackgroundBrush}" -->
	<!-- <views:MainView/> -->
	<Window.Resources>

	</Window.Resources>
	<Interaction.Behaviors>
		<DataTriggerBehavior Binding="{Binding IsBusy}" ComparisonCondition="Equal" Value="True">
			<ChangePropertyAction PropertyName="Cursor" Value="Wait" />
		</DataTriggerBehavior>
		<DataTriggerBehavior Binding="{Binding IsBusy}" ComparisonCondition="Equal" Value="False">
			<ChangePropertyAction PropertyName="Cursor" Value="Arrow" />
		</DataTriggerBehavior>
		<DataTriggerBehavior Binding="{Binding IsWorking}" ComparisonCondition="Equal" Value="True">
			<ChangePropertyAction PropertyName="Cursor" Value="AppStarting" />
		</DataTriggerBehavior>
		<DataTriggerBehavior Binding="{Binding IsWorking}" ComparisonCondition="Equal" Value="False">
			<ChangePropertyAction PropertyName="Cursor" Value="Arrow" />
		</DataTriggerBehavior>
	</Interaction.Behaviors>
	<Window.KeyBindings>
		<KeyBinding Command="{Binding PlayCommand}" Gesture="Play" />
		<KeyBinding Command="{Binding PlayCommand}" Gesture="Ctrl+Space" />
		<!-- 
		<KeyBinding Command="{Binding PlayCommand}" Gesture="Space" /> -->
		<KeyBinding Command="{Binding PlayCommand}" Gesture="Ctrl+P"/>
		<KeyBinding Command="{Binding PlayCommand}" Gesture="MediaPlayPause" />
		<KeyBinding Command="{Binding PlayCommand}" Gesture="MediaStop" />
		<KeyBinding Command="{Binding PlayNextCommand}" Gesture="MediaNextTrack" />
		<KeyBinding Command="{Binding PlayNextCommand}" Gesture="Ctrl+N" />
		<KeyBinding Command="{Binding PlayNextCommand}" Gesture="Ctrl+Right" />
		<KeyBinding Command="{Binding PlayPrevCommand}" Gesture="MediaPreviousTrack" />
		<KeyBinding Command="{Binding PlayPrevCommand}" Gesture="Ctrl+B" />
		<KeyBinding Command="{Binding PlayPrevCommand}" Gesture="Ctrl+Left" />
		<KeyBinding Command="{Binding VolumeMuteCommand}" Gesture="VolumeMute" />
		<KeyBinding Command="{Binding VolumeDownCommand}" Gesture="VolumeDown" />
		<KeyBinding Command="{Binding VolumeDownCommand}" Gesture="Ctrl+OemMinus" />
		<KeyBinding Command="{Binding VolumeDownCommand}" Gesture="Ctrl+Subtract" />
		<KeyBinding Command="{Binding VolumeUpCommand}" Gesture="VolumeUp" />
		<KeyBinding Command="{Binding VolumeUpCommand}" Gesture="Ctrl+OemPlus" />
		<KeyBinding Command="{Binding VolumeUpCommand}" Gesture="Ctrl+Add" />
		<KeyBinding Command="{Binding EscapeCommand}" Gesture="Escape" />
		<KeyBinding Command="{Binding ShowSettingsCommand}" Gesture="Ctrl+S"/>
		<KeyBinding Command="{Binding ShowFindCommand}" Gesture="Ctrl+F"/>
		<!--
		<KeyBinding Gesture="Alt+D" Command="{Binding DevCenterViewActivation}">
			<KeyBinding.CommandParameter>
				<x:Int32>0</x:Int32>
			</KeyBinding.CommandParameter>
		</KeyBinding>
		-->
	</Window.KeyBindings>

	<Grid RowDefinitions="*">
		
		<!-- Navigation menu -->
		<Border Grid.Row="0" BorderBrush="{DynamicResource CardStrokeBorderBrush}" BorderThickness="0,1,0,0">
			<ui:NavigationView Name="navigateView" MenuItemsSource="{Binding MainMenuItems, Mode=OneWay}" MenuItemTemplate="{StaticResource NavigationViewMenuItem}" SelectionFollowsFocus="False" ItemInvoked="NavigationView_ItemInvoked" SelectionChanged="NavigationView_SelectionChanged" Loaded="NavigationView_Loaded" IsPaneToggleButtonVisible="True" IsSettingsVisible="True" PaneDisplayMode="Auto" OpenPaneLength="260" IsPaneOpen="{Binding IsNavigationViewMenuOpen, Mode=TwoWay}" Margin="0" ScrollViewer.AllowAutoHide="True" CompactModeThresholdWidth="740" ExpandedModeThresholdWidth="1000" ScrollViewer.VerticalScrollBarVisibility="Visible">
				
				<ui:NavigationView.Resources>
					<DataTemplate x:Key="NavigationViewMenuItem" x:DataType="mod:NodeMenu">
						<ui:NavigationViewItem MenuItemsSource="{Binding Children}" IsExpanded="{Binding Expanded,Mode=TwoWay}" IsSelected="{Binding Selected, Mode=TwoWay}">

							<ui:NavigationViewItem.Content>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="-1,0,0,0">
									<Viewbox Width="16" Height="16" Opacity="0.9" HorizontalAlignment="Left">
										<PathIcon Background="Transparent" Width="NaN" Height="NaN" Margin="0" Padding="0"
											Data="{Binding PathIcon}">
										</PathIcon>
									</Viewbox>
									<TextBlock Text="{Binding Name}" Margin="16,0,0,0"></TextBlock>
								</StackPanel>
							</ui:NavigationViewItem.Content>

						</ui:NavigationViewItem>
					</DataTemplate>
				</ui:NavigationView.Resources>

			</ui:NavigationView>	
		</Border>
		
	</Grid>

</Window>
