<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" 
			 d:DesignWidth="800" d:DesignHeight="450"
			 xmlns:vm="clr-namespace:MPDCtrlX.ViewModels"
			 xmlns:mod="clr-namespace:MPDCtrlX.Models"
			 xmlns:prop="clr-namespace:MPDCtrlX.Properties"
             x:Class="MPDCtrlX.Views.LibraryPage"
			 x:DataType="vm:MainViewModel"
             x:CompileBindings="True">
	
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainDummyViewModel />
	</Design.DataContext>

	<!-- Library -->
	<Grid Margin="8,0,0,0">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="1*"/>
			<ColumnDefinition Width="8"/>
			<ColumnDefinition Width="3*"/>
		</Grid.ColumnDefinitions>


		<Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" BorderBrush="{DynamicResource CardStrokeBorderBrush}" BorderThickness="0,0,0,0">
			<StackPanel Spacing="24" Margin="7 12 0 12" Orientation="Horizontal" HorizontalAlignment="Left">
				<TextBlock Text="Files" Theme="{StaticResource TitleTextBlockStyle}" VerticalAlignment="Bottom" Margin="3,0,0,0"/>

				<!-- <TextBlock Theme="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Bottom">
					<Run Text="Search Key"/><Run Text="{Binding SelectedSearchTag.Label,Mode=OneWay}"/><Run Text=": "/><Run Text="{Binding SearchQuery, Mode=OneWay}"/></TextBlock> -->
				<!--
				<TextBlock Theme="{StaticResource CaptionTextBlockStyle}" VerticalAlignment="Bottom" Padding="0,0,0,4">
					<Run Text="Directories"/>
					<Run Text=": "/>
					<Run Text="{Binding MusicDirectoriesCount, Mode=OneWay}"/>
				</TextBlock>
				-->
				<TextBlock Theme="{StaticResource CaptionTextBlockStyle}" VerticalAlignment="Bottom" Padding="0,0,0,4">
					<Run Text="Total Files"/>
					<Run Text=": "/>
					<Run Text="{Binding MusicEntries.Count, Mode=OneWay}"/>
				</TextBlock>
				<!--
				<TextBlock Theme="{StaticResource CaptionTextBlockStyle}" VerticalAlignment="Bottom" Padding="0,0,0,4">
					<Run Text="Files"/>
					<Run Text=": "/>
					<Run Text="{Binding MusicEntriesFiltered.Count, Mode=OneWay}"/>
				</TextBlock>
				-->
			</StackPanel>
		</Border>

		<!--
		<TreeDataGrid Grid.Row="0" Grid.Column="0" BorderThickness="0 0 0 0" Source="{Binding MusicDirectoriesSource, Mode=TwoWay}" />
		-->
		<TreeView Grid.Row="1" Grid.Column="0" BorderThickness="0 0 0 0" ItemsSource="{Binding MusicDirectories, Mode=OneWay}" SelectionMode="AlwaysSelected" SelectedItem="{Binding SelectedNodeDirectory, Mode=TwoWay}" ScrollViewer.AllowAutoHide="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
			<TreeView.ItemTemplate>
				<TreeDataTemplate ItemsSource="{Binding Path=Children}">
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">

						<Viewbox Width="18" Height="18">
							<PathIcon Width="NaN" Height="NaN" Margin="0 0 4 2" Data="{Binding Path=PathIcon}"/>
						</Viewbox>

						<TextBlock Text="{Binding Path=Name}" Padding="4"/>
					</StackPanel>
				</TreeDataTemplate>
			</TreeView.ItemTemplate>
			<TreeView.Styles>
				<Style Selector="TreeViewItem" x:DataType="mod:NodeTree">
					<Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}"/>
					<Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}"/>
				</Style>
			</TreeView.Styles>
		</TreeView>

		<!-- Song list of selected directory -->
		<Grid Grid.Row="1" Grid.Column="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>


			<Grid Grid.Row="1" Grid.Column="0" RowDefinitions="1,Auto,1,*" Margin="8,0,0,0">
				<Border Grid.Row="0" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" Opacity="0.6"></Border>
				<Grid Grid.Row="1" DockPanel.Dock="Top" Height="30" Margin="1,0,0,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="*"></ColumnDefinition>
					</Grid.ColumnDefinitions>

					<Grid Grid.Column="0" Name="Library1">
						<Label Name="Library1x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center">File Name</Label>
					</Grid>

					<GridSplitter Grid.Column="1" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns" MaxWidth="4"/>
					<Grid Grid.Column="2" Name="Library2">
						<Label Name="Library2x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,0,0" VerticalAlignment="Center">File Path</Label>
					</Grid>

					<GridSplitter Grid.Column="3" Background="Transparent" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" BorderThickness="0,0,1,0" Opacity="0.5" ResizeDirection="Columns"/>

				</Grid>
				<Border Grid.Row="2" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource LayerFillColorDefaultBrush}" Opacity="0.5"></Border>
				<ListBox Grid.Row="3" ItemsSource="{Binding MusicEntriesFiltered}" SelectionMode="Multiple" Loaded="ListBox_Loaded" BorderThickness="0" Margin="0,3,0,0" ScrollViewer.AllowAutoHide="True" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
					<!--  Background="{DynamicResource LayerFillColorDefaultBrush}" -->
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="*"></ColumnDefinition>
									<!-- Width="{Binding Width, ElementName=test3}" MinWidth="{Binding MinWidth, ElementName=test3}" MaxWidth="{Binding MaxWidth, ElementName=test3}" -->
								</Grid.ColumnDefinitions>
								<TextBlock Grid.Column="0" Width="{Binding Bounds.Size.Width, ElementName=Library1}" Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								</TextBlock>
								<TextBlock Grid.Column="2" Width="{Binding Bounds.Size.Width, ElementName=Library2}" Text="{Binding FilePath}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Padding="12,0,0,0" Opacity="0.9">
								</TextBlock>
							</Grid>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<ListBox.Styles>
						<Style Selector="ListBoxItem">
							<Setter Property="Height" Value="36"/>
							<Setter Property="MinHeight" Value="32"/>
							<Setter Property="Padding" Value="0,0,6,0" />
						</Style>
					</ListBox.Styles>

				</ListBox>
			</Grid>

			<!-- Filter box -->
			<!--
                        <Grid Grid.Row="0" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Top">

                            <TextBox x:Name="FilterTextBox" Text="{Binding FilterMusicEntriesQuery, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.TabNavigation="Local" Padding="3" Margin="0.5 0.5 1 0.5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBoxStyle}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True" CornerRadius="3">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="28"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>

                                                            <Button Grid.Column="1" Height="22" Width="22" Margin="0" HorizontalAlignment="Right" ToolTip="{x:Static properties:Resources.FilterClear}" Command="{Binding FilterMusicEntriesClearCommand}" IsDefault="False" Content="M14.76,20.83L17.6,18L14.76,15.17L16.17,13.76L19,16.57L21.83,13.76L23.24,15.17L20.43,18L23.24,20.83L21.83,22.24L19,19.4L16.17,22.24L14.76,20.83M12,12V19.88C12.04,20.18 11.94,20.5 11.71,20.71C11.32,21.1 10.69,21.1 10.3,20.71L8.29,18.7C8.06,18.47 7.96,18.16 8,17.87V12H7.97L2.21,4.62C1.87,4.19 1.95,3.56 2.38,3.22C2.57,3.08 2.78,3 3,3V3H17V3C17.22,3 17.43,3.08 17.62,3.22C18.05,3.56 18.13,4.19 17.79,4.62L12.03,12H12Z">
                                                                <Button.Resources>
                                                                    <Style x:Key="ButtonIntextboxFocusVisual">
                                                                        <Setter Property="Control.Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate>
                                                                                    <Border>
                                                                                        <Rectangle Margin="2" StrokeThickness="1" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeDashArray="1 2" />
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Button.Resources>
                                                                <Button.Style>
                                                                    <Style TargetType="Button">
                                                                        <Setter Property="SnapsToDevicePixels" Value="true" />
                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonIntextboxFocusVisual}" />
                                                                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                                                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                                                                        <Setter Property="Margin" Value="0" />
                                                                        <Setter Property="Padding" Value="0" />
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="Button">
                                                                                    <Border x:Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource BorderDarkColorBrush}" CornerRadius="2">
                                                                                        <Path x:Name="PathIcon" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Stroke="Transparent" StrokeThickness="0" Margin="4" RenderTransformOrigin="0.5,0.5">
                                                                                            <Path.RenderTransform>
                                                                                                <TransformGroup>
                                                                                                    <TransformGroup.Children>
                                                                                                        <RotateTransform Angle="0" />
                                                                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                                                                    </TransformGroup.Children>
                                                                                                </TransformGroup>
                                                                                            </Path.RenderTransform>
                                                                                            <Path.Fill>
                                                                                                <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                                                                            </Path.Fill>
                                                                                        </Path>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>

                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource DisabledForegroundColorBrush}"/>
                                                                                        </Trigger>

                                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                                                                        </Trigger>

                                                                                    </ControlTemplate.Triggers>

                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Button.Style>

                                                            </Button>

                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlMouseOverColorBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlPressedColorBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            </MultiTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                        </Grid>

                        <Grid x:Name="SongFilesListviewDummy" Grid.Row="1" Visibility="Hidden" Margin="0 0 20 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            
                            <Grid x:Name="SongFilesListviewDummy1" Grid.Column="0" />
                            <Grid x:Name="SongFilesListviewDummy2" Grid.Column="1" />
                            <Grid x:Name="SongFilesListviewDummy3" Grid.Column="2" />
                        </Grid>

                        <ListView x:Name="SongFilesListview" Grid.Row="1" ItemsSource="{Binding MusicEntries}" SelectionMode="Extended" AlternationCount="2" Background="{DynamicResource WindowBackgroundBaseColorBrush}" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsVirtualizingWhenGrouping="True" VirtualizingPanel.IsVirtualizing="True" VirtualizingStackPanel.ScrollUnit="Pixel" helpers:GridViewSort.AutoSort="True" helpers:GridViewSort.ShowSortGlyph="True" IsSynchronizedWithCurrentItem="True" BorderBrush="#121212" BorderThickness="0 0 0 0" Padding="0" Margin="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                            <ListView.Resources>
                                <ContextMenu x:Key="SongFilesListviewItemContextMenu">
                                    <MenuItem Header="{x:Static properties:Resources.SongsItemContextMenu_Add}" Command="{Binding Path=DataContext.SongFilesListviewAddCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="PlusIcon">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource PlusIcon}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator />

                                    <MenuItem Header="{x:Static properties:Resources.QueueItemContextMenu_SaveSelectedAs}" Command="{Binding Path=DataContext.SongFilesListviewSaveSelectedAsCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="PlaylistPlusIcon">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M2,16H10V14H2M18,14V10H16V14H12V16H16V20H18V16H22V14M14,6H2V8H14M14,10H2V12H14V10Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource PlaylistPlusIcon}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator />

                                    <MenuItem Header="{x:Static properties:Resources.QueueItemContextMenu_SaveSelectedTo}" Command="{Binding Path=DataContext.SongFilesListviewSaveSelectedToCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem.Resources>
                                            <ControlTemplate x:Key="PlaylistCheckIcon">
                                                <Canvas Background="Transparent" >
                                                    <Path Fill="#373737" Width="14.3775" Height="14" Canvas.Left="0.311264" Canvas.Top="0.500005" Stretch="Uniform" Data="M14,10H2V12H14V10M14,6H2V8H14V6M2,16H10V14H2V16M21.5,11.5L23,13L16,20L11.5,15.5L13,14L16,17L21.5,11.5Z" />
                                                </Canvas>
                                            </ControlTemplate>
                                        </MenuItem.Resources>
                                        <MenuItem.Icon>
                                            <ContentControl Template="{StaticResource PlaylistCheckIcon}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                                <Style TargetType="{x:Type ScrollBar}">
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="Margin" Value="0,0,0,0" />
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Style.Triggers>
                                        <Trigger Property="Orientation" Value="Vertical">
                                            <Setter Property="Width" Value="14"/>
                                            <Setter Property="Height" Value="Auto" />
                                            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                        </Trigger>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="Height" Value="14" />
                                            <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Resources>
                            <ListView.View>
                                <GridView>
                                    <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource GridViewColumnHeaderClickStyle}">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>

                                    <GridViewColumn Width="{Binding ElementName=SongFilesListviewDummy1, Path=ActualWidth}">
                                        <GridViewColumnHeader Content=""/>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Viewbox Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Canvas Width="24" Height="24">
                                                        <Path x:Name="MusicFileIcon" Fill="{DynamicResource ControlMediumColorBrush}" Canvas.Top="0" Stretch="Uniform" Data="{Binding PathIcon}" />
                                                    </Canvas>
                                                </Viewbox>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                        <Setter TargetName="MusicFileIcon" Property="Fill" Value="#111111" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Width="{Binding ElementName=SongFilesListviewDummy2, Path=ActualWidth}" helpers:GridViewSort.PropertyName="Name">
                                        <GridViewColumnHeader Content="{x:Static properties:Resources.SongFilesListviewColumnHeader_File}"/>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock x:Name="SongsListviewSongTitleListItemTextBlock" Text="{Binding Path=Name}" Padding="3" />
                                                </StackPanel>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                        <Setter TargetName="SongsListviewSongTitleListItemTextBlock" Property="TextBlock.Foreground" Value="#111111" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Width="{Binding ElementName=SongFilesListviewDummy3, Path=ActualWidth}" helpers:GridViewSort.PropertyName="FilePath">
                                        <GridViewColumnHeader Content="{x:Static properties:Resources.SongFilesListviewColumnHeader_Path}"/>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock x:Name="SongsListviewSongPathListItemTextBlock" Text="{Binding Path=FilePath}" Padding="3" />
                                                </StackPanel>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                        <Setter TargetName="SongsListviewSongPathListItemTextBlock" Property="TextBlock.Foreground" Value="#111111" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                </GridView>
                            </ListView.View>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical" CanVerticallyScroll="True"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyle}">
                                    <Setter Property="ContextMenu" Value="{StaticResource SongFilesListviewItemContextMenu}" />
                                    <Setter Property="Margin" Value="2 0 1 0"/>
                                    <Setter Property="Padding" Value="0 1 0 1"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Name="Border" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}" CornerRadius="4" SnapsToDevicePixels="true">
                                                    <Border.InputBindings>
                                                        <MouseBinding Command="{Binding Path=DataContext.SongFilesListviewLeftDoubleClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Gesture="LeftDoubleClick" />
                                                    </Border.InputBindings>
                                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>

                        <Popup IsOpen="{Binding IsSongFilesSelectedSaveAsPopupVisible}" StaysOpen="False" PlacementTarget="{Binding ElementName=SongFilesListview}" Placement="Center" AllowsTransparency="True" PopupAnimation="Fade">
                            <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="250" BorderThickness="1" BorderBrush="{DynamicResource PopupBorderColorBrush}">
                                <StackPanel>

                                    <Label Content="{x:Static properties:Resources.Popup_SaveSelectedAs}" TextElement.FontWeight="Bold" />

                                    <Grid Grid.Row="0" Grid.Column="0" Margin="3 12 3 3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="6"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Row="0" Grid.Column="1" Padding="3" VerticalAlignment="Bottom" Content="{x:Static properties:Resources.Popup_InputNewPlaylistName}"></Label>
                                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0 3 0 3">
                                            <TextBox x:Name="NewPlaylistNameAtSelectedSaveAsAtSongFiles" Width="200" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Padding="3" IsVisibleChanged="TextBox_IsVisibleChanged"/>
                                        </StackPanel>

                                    </Grid>

                                    <Button Content="{x:Static properties:Resources.Popup_OK}" Command="{Binding SongFilesListviewSaveSelectedAsPopupCommand}" CommandParameter="{Binding ElementName=NewPlaylistNameAtSelectedSaveAsAtSongFiles, Path=Text}" IsDefault="True" Width="60" Margin="12" HorizontalAlignment="Right">
                                    </Button>

                                </StackPanel>
                            </Border>
                        </Popup>

                        <Popup IsOpen="{Binding IsSongFilesSelectedSaveToPopupVisible}" x:Name="LibraryListviewPopupPlaylistSelect" Opened="LibraryListviewPopupPlaylistSelect_Opened" StaysOpen="False" PlacementTarget="{Binding ElementName=SongFilesListview}" Placement="Center" AllowsTransparency="True" PopupAnimation="Fade">
                            <Border Background="WhiteSmoke" CornerRadius="4" Padding="6" Width="250" BorderThickness="1" BorderBrush="{DynamicResource PopupBorderColorBrush}">
                                <StackPanel>

                                    <Label Content="{x:Static properties:Resources.Popup_SaveSelectedTo}" TextElement.FontWeight="Bold" />

                                    <Grid Grid.Row="0" Grid.Column="0" Margin="3 12 3 3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="6"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Row="0" Grid.Column="1" Padding="3" VerticalAlignment="Bottom" Content="{x:Static properties:Resources.Popup_SelectPlaylist}"></Label>
                                        <ListView Grid.Row="1" Grid.Column="1" x:Name="PopupPlaylistSelectListviewAtSongFiles" ItemsSource="{Binding Playlists}" DisplayMemberPath="Name">

                                        </ListView>
                                    </Grid>

                                    <Button Content="{x:Static properties:Resources.Popup_OK}" Command="{Binding SongFilesListviewSaveSelectedToPopupCommand}" CommandParameter="{Binding ElementName=PopupPlaylistSelectListviewAtSongFiles, Path=SelectedItem}" IsDefault="True" Width="60" Margin="12" HorizontalAlignment="Right">
                                    </Button>

                                </StackPanel>
                            </Border>
                        </Popup>
-->
		</Grid>

	</Grid>
</UserControl>
