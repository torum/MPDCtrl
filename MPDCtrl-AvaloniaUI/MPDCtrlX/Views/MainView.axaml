<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:MPDCtrlX.ViewModels"
             xmlns:tn="clr-namespace:MPDCtrlX.ViewModels.Classes"
			 xmlns:sng="clr-namespace:MPDCtrlX.Models"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="MPDCtrlX.Views.MainView"
             x:DataType="vm:MainViewModel">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainDummyViewModel />
	</Design.DataContext>
	<Grid x:Name="MainGrid" RowDefinitions="0,120,*,Auto,28" ColumnDefinitions="250,*">
		<!-- {OnPlatform Default='0,120,*,0,Auto,28', Windows='32,120,*,0,Auto,28'} -->
		<!-- ,x:TypeArguments='RowDefinitions' or ,x:TypeArguments='GridLength'-->

		<!-- App title bar-->
		<Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" RowDefinitions="*" ColumnDefinitions="24,*,24">

			<!-- Logo -->
			<Image Grid.Row="0" Grid.Column="0" Width="18" Height="18" Margin="6" Source="avares://MPDCtrlX/Assets/MPDCtrlX.ico" VerticalAlignment="Center" HorizontalAlignment="Left"/>
			
			<!-- Now Playing -->
			<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" IsVisible="False">
				<TextBlock>
					<Run x:Name="CurrentSongTitle" Foreground="{DynamicResource ControlForegroundColorBrush}" FontWeight="DemiBold" Text="{Binding CurrentSongTitle, Mode=OneWay}"/>
				</TextBlock>
				<TextBlock>
					<Run Text="  by "/>
					<Run x:Name="CurrentSongArtist" Foreground="{DynamicResource ControlLightColorBrush}" Text="{Binding CurrentSongArtist, Mode=OneWay}"/>
				</TextBlock>
				<TextBlock>
					<Run Text="  from "/>
					<Run x:Name="CurrentSongAlbum" Foreground="{DynamicResource ControlMediumColorBrush}" Text="{Binding CurrentSongAlbum, Mode=OneWay}" />
				</TextBlock>
			</StackPanel>

		</Grid>

		<!-- Header -->
		<Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" RowDefinitions="*" ColumnDefinitions="*,Auto,*">

			<!-- Playback Controls -->
			<Grid Grid.Row="0" Grid.Column="1" RowDefinitions="Auto,*" ColumnDefinitions="*,Auto,*" HorizontalAlignment="Center" VerticalAlignment="Center">

				<!-- Playback Buttons -->
				<Grid Grid.Row="0" Grid.Column="1" Width="280" RowDefinitions="Auto,Auto" ColumnDefinitions="*,Auto,*" VerticalAlignment="Center">

					<!-- "Play" should be top so that it gets the first keyboard focus -->
					<Button x:Name="PlayButton" Content="Play" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="62" Width="62" Background="Transparent" Foreground="White" Command="{Binding PlayCommand}"></Button>

					<Button x:Name="BackButton" Content="Prev" Grid.Column="0" HorizontalAlignment="Center" Height="42" Width="62" Background="Transparent" Foreground="White" Command="{Binding PlayPrevCommand}" ></Button>

					<Button x:Name="NextButton" Content="Next" Grid.Column="2" HorizontalAlignment="Center" Height="42" Width="62" Background="Transparent" Foreground="White"  Command="{Binding PlayNextCommand}" ></Button>

				</Grid>
				<Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Bottom">
					<Slider Orientation="Horizontal" Maximum="{Binding Mode=TwoWay,Path=Time}" Value="{Binding Mode=TwoWay,Path=Elapsed,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Minimum="0" Width="280" Margin="0" Padding="0"></Slider>
				</Grid>

			</Grid>

			<!-- Volume slider -->
			<Grid Grid.Row="0" Grid.Column="2" ColumnDefinitions="Auto,*" VerticalAlignment="Center">
				<StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="48,0,0,12">
					<ToggleButton x:Name="RepeatButton" Content="Repeat" Width="83" Margin="10,0,0,0" IsChecked="{Binding Repeat, Mode=TwoWay}"></ToggleButton>
					<ToggleButton x:Name="SingleButton" Content="Single" Width="83" Margin="10,0,0,0" IsChecked="{Binding Single, Mode=TwoWay}"></ToggleButton>
					<ToggleButton x:Name="RandomButton" Content="Random" Width="83" Margin="10,0,0,0" IsChecked="{Binding Random, Mode=TwoWay}"></ToggleButton>
					<ToggleButton x:Name="ConsumeButton" Content="Consume" Width="83" Margin="10,0,0,0" IsChecked="{Binding Consume, Mode=TwoWay}"></ToggleButton>
				</StackPanel>
				<Slider Grid.Column="1" Height="100" Margin="0,12,0,8" Value="{Binding Volume,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="100" Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Center"></Slider>
			</Grid>

		</Grid>

		<!-- Left pane -->
		<Grid Grid.Row="2" Grid.Column="0">

			<Border Grid.Row="0" Grid.Column="0" MinWidth="250" Width="250" BorderThickness="0 0 0 0" BorderBrush="#555" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
				<Grid RowDefinitions="*" ColumnDefinitions="*">
					<TreeView ItemsSource="{Binding MainMenuItems}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" ScrollViewer.AllowAutoHide="False">
						<TreeView.ItemTemplate>
							<TreeDataTemplate ItemsSource="{Binding Children}">
								<Border HorizontalAlignment="Left" Padding="4">
									<TextBlock Text="{Binding Name}" />
								</Border>
							</TreeDataTemplate>
						</TreeView.ItemTemplate>
						<TreeView.Styles>
							<Style Selector="TreeViewItem" x:DataType="tn:NodeTree">
								<Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}"/>
								<Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}"/>
							</Style>
						</TreeView.Styles>
					</TreeView>
				</Grid>
			</Border>

		</Grid>

		<!-- Right pane -->
		<Grid Grid.Row="2" Grid.Column="1">
			<Grid RowDefinitions="Auto,1,*" Grid.IsSharedSizeScope="True">
				<Grid Grid.Row="0" DockPanel.Dock="Top" Height="31" Margin="2,0,0,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						
						<ColumnDefinition Width="4"></ColumnDefinition>
						<ColumnDefinition Width="*"></ColumnDefinition>
					</Grid.ColumnDefinitions>
					
					<Grid Grid.Column="0" Name="test1">
						<Label Name="test1x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">#</Label></Grid>
					
					<GridSplitter Grid.Column="1" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns"/>
					<Grid Grid.Column="2" Name="test2">
						<Label Name="test2x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">$</Label></Grid>
					
					<GridSplitter Grid.Column="3" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns" MaxWidth="4"/>
					<Grid Grid.Column="4" Name="test3">
						<Label Name="test3x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">Title</Label>
					</Grid>

					<GridSplitter Grid.Column="5" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns" MaxWidth="4"/>
					<Grid Grid.Column="6" Name="test4">
						<Label Name="test4x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">Time</Label></Grid>

					<GridSplitter Grid.Column="7" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns"/>
					<Grid Grid.Column="8" Name="test5">
						<Label Name="test5x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">Artist</Label>
					</Grid>

					<GridSplitter Grid.Column="9" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns"/>
					<Grid Grid.Column="10" Name="test6">
						<Label Name="test6x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">Album</Label>
					</Grid>

					<GridSplitter Grid.Column="11" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns"/>
					<Grid Grid.Column="12" Name="test7">
						<Label Name="test7x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">Disc</Label>
					</Grid>

					<GridSplitter Grid.Column="13" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns"/>
					<Grid Grid.Column="14" Name="test8">
						<Label Name="test8x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">Track</Label>
					</Grid>

					<GridSplitter Grid.Column="15" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns"/>
					<Grid Grid.Column="16" Name="test9">
						<Label Name="test9x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">Genre</Label>
					</Grid>

					<GridSplitter Grid.Column="17" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns"/>
					<Grid Grid.Column="18" Name="test10">
						<Label Name="test10x" Opacity="0.5" HorizontalAlignment="Left" Padding="12,0,6,0" VerticalAlignment="Center">LastModified</Label>
					</Grid>

					<GridSplitter Grid.Column="19" Background="Transparent" Opacity="0.1" CornerRadius="4" ResizeDirection="Columns"/>
					
				</Grid>
				<Border Grid.Row="1" BorderThickness="0,0,0,1" BorderBrush="#333333" Opacity="0.1"></Border>
				<ListBox Grid.Row="2" ItemsSource="{Binding Queue}" BorderThickness="0" Background="Transparent" ScrollViewer.AllowAutoHide="False" ScrollViewer.VerticalScrollBarVisibility="Visible" Loaded="ListBox_Loaded">
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
					<ListBox.ItemTemplate>
						<DataTemplate x:DataType="sng:SongInfoEx">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="Auto"></ColumnDefinition>
									
									<ColumnDefinition Width="4"></ColumnDefinition>
									<ColumnDefinition Width="*"></ColumnDefinition>
									<!-- Width="{Binding Width, ElementName=test3}" MinWidth="{Binding MinWidth, ElementName=test3}" MaxWidth="{Binding MaxWidth, ElementName=test3}" -->
								</Grid.ColumnDefinitions>
								<TextBlock Grid.Column="0" Width="{Binding Bounds.Size.Width, ElementName=test1}" Text="{Binding IndexPlusOne}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								<TextBlock Grid.Column="2" Width="{Binding Bounds.Size.Width, ElementName=test2}" Text="{Binding IsPlaying}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0">
									<Interaction.Behaviors>
										<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="True">
											<ChangePropertyAction PropertyName="Text" Value="Playing" />
										</DataTriggerBehavior>
										<DataTriggerBehavior Binding="{Binding IsPlaying}" ComparisonCondition="Equal" Value="False">
											<ChangePropertyAction PropertyName="Text" Value="" />
										</DataTriggerBehavior>
									</Interaction.Behaviors>
								</TextBlock>
								<TextBlock Grid.Column="4" Width="{Binding Bounds.Size.Width, ElementName=test3}" Text="{Binding Title}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								<TextBlock Grid.Column="6" Width="{Binding Bounds.Size.Width, ElementName=test4}" Text="{Binding TimeFormated}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								<TextBlock Grid.Column="8" Width="{Binding Bounds.Size.Width, ElementName=test5}" Text="{Binding Artist}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								<TextBlock Grid.Column="10" Width="{Binding Bounds.Size.Width, ElementName=test6}" Text="{Binding Album}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								<TextBlock Grid.Column="12" Width="{Binding Bounds.Size.Width, ElementName=test7}" Text="{Binding Disc}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								<TextBlock Grid.Column="14" Width="{Binding Bounds.Size.Width, ElementName=test8}" Text="{Binding Track}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								<TextBlock Grid.Column="16" Width="{Binding Bounds.Size.Width, ElementName=test9}" Text="{Binding Genre}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								<TextBlock Grid.Column="18" Width="{Binding Bounds.Size.Width, ElementName=test10}" Text="{Binding LastModifiedFormated}" HorizontalAlignment="Left" Margin="0" Padding="12,0,6,0"></TextBlock>
								
							</Grid>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<ListBox.Styles>
						<Style Selector="ListBoxItem" x:DataType="sng:SongInfoEx">
							<Setter Property="Height" Value="32"/>
							<Setter Property="MinHeight" Value="32"/>
							<Setter Property="Padding" Value="0,0,0,0" />
						</Style>
					</ListBox.Styles>

				</ListBox>
			</Grid>

			
		</Grid>

		<!-- Debug Windows -->
		<Grid x:Name="DebugWindow" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" RowDefinitions="Auto,*" ColumnDefinitions="1*,8,1*" Height="200" IsVisible="True">

			<Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Width="30" Height="30" Margin="0 0 2 0" HorizontalAlignment="Right" VerticalAlignment="Center" Content="x" Background="Transparent" BorderThickness="0" Command="{Binding ShowDebugWindowCommand}"></Button>

			<Grid Grid.Row="1" Grid.Column="0">

				<TextBox x:Name="DebugCommandTextBox" Text="{Binding DebugCommandText, Mode=OneWay}" Background="Transparent" BorderThickness="0" AcceptsReturn="True" Padding="6 0 0 0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" TextWrapping="NoWrap" IsReadOnly="True" IsTabStop="False" Margin="0" MinHeight="24">
				</TextBox>

				<Button Width="30" Height="30" HorizontalAlignment="Right" Margin="0 6 24 0" VerticalAlignment="Top" Content="x" BorderThickness="0" Background="Transparent" Command="{Binding ClearDebugCommandTextCommand}"></Button>

			</Grid>

			<Grid Grid.Row="1" Grid.Column="2">

				<TextBox x:Name="DebugIdleTextBox" Text="{Binding DebugIdleText, Mode=OneWay}" Background="Transparent" BorderThickness="0" AcceptsReturn="True" Padding="6 0 0 0" VerticalAlignment="Stretch" TextWrapping="NoWrap" IsReadOnly="True" IsTabStop="False" Margin="0" MinHeight="24">
				</TextBox>

				<Button Width="30" Height="30" HorizontalAlignment="Right" Margin="0 6 24 0" VerticalAlignment="Top" Content="x" BorderThickness="0" Background="Transparent" Command="{Binding ClearDebugIdleTextCommand}"></Button>

			</Grid>

		</Grid>

		<!-- StatusBar -->
		<Border Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Height="28" Margin="0 0 0 0">
			<StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0 0 2 0">

				<!-- ConnectionStatusMessage  -->
				<TextBlock Text="{Binding ConnectionStatusMessage}" Margin="6 0 6 0" TextWrapping="NoWrap"></TextBlock>

				<!-- Status Error Message -->
				<TextBlock Text="{Binding MpdStatusMessage}" Margin="6 0 6 0" TextWrapping="NoWrap"></TextBlock>

				<!-- Statusbar Message  -->
				<TextBlock Text="{Binding StatusBarMessage}" Margin="6 0 6 0" TextWrapping="NoWrap"></TextBlock>

			</StackPanel>
		</Border>


	</Grid>
</UserControl>
